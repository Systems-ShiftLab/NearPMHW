#*****************************************************************************************
# Vivado (TM) v2018.2 (64-bit)
#
# build.tcl: Tcl script for re-creating project 'project_1'
#
# Generated by Vivado on Mon Jan 23 13:23:18 EST 2023
# IP Build 2256618 on Thu Jun 14 22:10:49 MDT 2018
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (build.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "src/hw/combile.v"
#    "src/hw/dimm_scheduler.v"
#    "src/hw/gate_axi.v"
#    "src/hw/multi_thread_command_split.v"
#    "src/hw/dma_driver.v"
#    "src/hw/pmunit_controller_multidimm.v"
#    "src/hw/pmunit_multidimm.v"
#    "src/hw/split.v"
#    "src/hw/split_com_arbitter.v"
#    "src/bd/design_5_wrapper.v"
#    "src/hw/dimm_scheduler_blocking.v"
#    "src/bd/design_3_wrapper.v"
#    "src/hw/pmunit_controller.v"
#    "src/hw/pmunit.v"
#    "src/hw/axi_lite_master_pcie.v"
#    "src/bd/design_1_wrapper.v"
#    "src/bd/design_2_wrapper.v"
#    "src/bd/design_4_wrapper.v"
#    "src/constrains/constrain1.xdc"
#    "src/constrains/constraint_design3.xdc"
#    "sim/hdl/test_dma.v"
#    "sim/hdl/test_multi_thread_split.v"
#    "wcfg/test_multi_thread_scheduler_behav.wcfg"
#
# 3. The following remote source files that were added to the original project:-
#
#    "src/hw/addrmonitor.v"
#    "src/hw/multi_thread_scheduler_v1_0_S00_AXI.v"
#    "src/hw/multi_thread_scheduler_v1_0.v"
#    "src/hw/axi_lite_master_driver.v"
#    "src/hw/axi_data_writer.v"
#    "xml/component.xml"
#    "src/hw/test_multi_thread_scheduler.v"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir [file dirname [info script]]

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "NearPM"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name:
}

variable script_file
set script_file "build.tcl"

# Help information for this script
proc help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/"]"

# Create project
create_project NearPM $origin_dir/NearPM -force -part xcvu9p-flga2104-2L-e

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
set_msg_config  -ruleid {1}  -id {[BD 41-1306]}  -suppress  -source 2
set_msg_config  -ruleid {2}  -id {[BD 41-1271]}  -suppress  -source 2


# Set project properties
set obj [current_project]
set_property -name "board_part" -value "xilinx.com:vcu118:part0:2.0" -objects $obj
set_property -name "compxlib.activehdl_compiled_library_dir" -value "$proj_dir/${_xil_proj_name_}.cache/compile_simlib/activehdl" -objects $obj
set_property -name "compxlib.funcsim" -value "1" -objects $obj
set_property -name "compxlib.ies_compiled_library_dir" -value "$proj_dir/${_xil_proj_name_}.cache/compile_simlib/ies" -objects $obj
set_property -name "compxlib.modelsim_compiled_library_dir" -value "$proj_dir/${_xil_proj_name_}.cache/compile_simlib/modelsim" -objects $obj
set_property -name "compxlib.overwrite_libs" -value "0" -objects $obj
set_property -name "compxlib.questa_compiled_library_dir" -value "$proj_dir/${_xil_proj_name_}.cache/compile_simlib/questa" -objects $obj
set_property -name "compxlib.riviera_compiled_library_dir" -value "$proj_dir/${_xil_proj_name_}.cache/compile_simlib/riviera" -objects $obj
set_property -name "compxlib.timesim" -value "1" -objects $obj
set_property -name "compxlib.vcs_compiled_library_dir" -value "$proj_dir/${_xil_proj_name_}.cache/compile_simlib/vcs" -objects $obj
set_property -name "compxlib.xsim_compiled_library_dir" -value "" -objects $obj
set_property -name "corecontainer.enable" -value "0" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.board_id" -value "vcu118" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.rom.debug_type" -value "0" -objects $obj
set_property -name "dsa.rom.prom_type" -value "0" -objects $obj
set_property -name "dsa.uses_pr" -value "1" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_optional_runs_sta" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "generate_ip_upgrade_log" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_interface_inference_priority" -value "" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "project_type" -value "Default" -objects $obj
set_property -name "pr_flow" -value "0" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "sim.use_ip_compiled_libs" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "source_mgmt_mode" -value "All" -objects $obj
set_property -name "target_language" -value "Verilog" -objects $obj
set_property -name "target_simulator" -value "XSim" -objects $obj
set_property -name "tool_flow" -value "Vivado" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "71" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "71" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "71" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "71" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "71" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "71" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "71" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "874" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj
set_property -name "xsim.array_display_limit" -value "1024" -objects $obj
set_property -name "xsim.radix" -value "hex" -objects $obj
set_property -name "xsim.time_unit" -value "ns" -objects $obj
set_property -name "xsim.trace_limit" -value "65536" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/AXI_Lite_slave_plug_1.0"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/src/hw/addrmonitor.v"] \
 [file normalize "${origin_dir}/src/hw/multi_thread_scheduler_v1_0_S00_AXI.v"] \
 [file normalize "${origin_dir}/src/hw/multi_thread_scheduler_v1_0.v"] \
 [file normalize "${origin_dir}/src/hw/axi_lite_master_driver.v"] \
 [file normalize "${origin_dir}/src/hw/axi_data_writer.v"] \
 [file normalize "${origin_dir}/xml/component.xml"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/hw/combile.v" ]\
 [file normalize "${origin_dir}/src/hw/dimm_scheduler.v" ]\
 [file normalize "${origin_dir}/src/hw/gate_axi.v" ]\
 [file normalize "${origin_dir}/src/hw/multi_thread_command_split.v" ]\
 [file normalize "${origin_dir}/src/hw/dma_driver.v" ]\
 [file normalize "${origin_dir}/src/hw/pmunit_controller_multidimm.v" ]\
 [file normalize "${origin_dir}/src/hw/pmunit_multidimm.v" ]\
 [file normalize "${origin_dir}/src/hw/split.v" ]\
 [file normalize "${origin_dir}/src/hw/split_com_arbitter.v" ]\
 [file normalize "${origin_dir}/src/bd/design_5_wrapper.v" ]\
 [file normalize "${origin_dir}/src/hw/dimm_scheduler_blocking.v" ]\
 [file normalize "${origin_dir}/src/bd/design_3_wrapper.v" ]\
 [file normalize "${origin_dir}/src/hw/pmunit_controller.v" ]\
 [file normalize "${origin_dir}/src/hw/pmunit.v" ]\
 [file normalize "${origin_dir}/src/hw/axi_lite_master_pcie.v" ]\
 [file normalize "${origin_dir}/src/bd/design_1_wrapper.v"]\
 [file normalize "${origin_dir}/src/bd/design_2_wrapper.v" ]\
 [file normalize "${origin_dir}/src/bd/design_4_wrapper.v" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
set file "src/hw/addrmonitor.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/multi_thread_scheduler_v1_0_S00_AXI.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/multi_thread_scheduler_v1_0.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/axi_lite_master_driver.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/axi_data_writer.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "xml/component.xml"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "IP-XACT" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
set file "src/hw/combile.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/dimm_scheduler.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/gate_axi.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/multi_thread_command_split.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/dma_driver.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/pmunit_controller_multidimm.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/pmunit_multidimm.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/split.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/split_com_arbitter.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/bd/design_5_wrapper.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/dimm_scheduler_blocking.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/bd/design_3_wrapper.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/pmunit_controller.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/pmunit.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/hw/axi_lite_master_pcie.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/bd/design_1_wrapper.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/bd/design_2_wrapper.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "src/bd/design_4_wrapper.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "design_mode" -value "RTL" -objects $obj
set_property -name "edif_extra_search_paths" -value "" -objects $obj
set_property -name "elab_link_dcps" -value "1" -objects $obj
set_property -name "elab_load_timing_constraints" -value "1" -objects $obj
set_property -name "generic" -value "" -objects $obj
set_property -name "include_dirs" -value "" -objects $obj
set_property -name "lib_map_file" -value "" -objects $obj
set_property -name "loop_count" -value "1000" -objects $obj
set_property -name "name" -value "sources_1" -objects $obj
set_property -name "top" -value "design_5_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "verilog_define" -value "" -objects $obj
set_property -name "verilog_uppercase" -value "0" -objects $obj
set_property -name "verilog_version" -value "verilog_2001" -objects $obj
set_property -name "vhdl_version" -value "vhdl_2k" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "constrains/constrain1.xdc"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "constrains/constrain1.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "processing_order" -value "NORMAL" -objects $file_obj
set_property -name "scoped_to_cells" -value "" -objects $file_obj
set_property -name "scoped_to_ref" -value "" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "constrains/constraint_design3.xdc"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "constrains/constraint_design3.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "processing_order" -value "NORMAL" -objects $file_obj
set_property -name "scoped_to_cells" -value "" -objects $file_obj
set_property -name "scoped_to_ref" -value "" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "constrs_type" -value "XDC" -objects $obj
set_property -name "name" -value "constrs_1" -objects $obj
set_property -name "target_constrs_file" -value "[get_files *new/constrain1.xdc]" -objects $obj
set_property -name "target_ucf" -value "[get_files *new/constrain1.xdc]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 [file normalize "${origin_dir}/src/hw/test_multi_thread_scheduler.v"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/sim/hdl/test_dma.v"]\
 [file normalize "${origin_dir}/sim/hdl/test_multi_thread_split.v" ]\
 [file normalize "${origin_dir}/wcfg/test_multi_thread_scheduler_behav.wcfg" ]\
]
set imported_files [import_files -fileset sim_1 $files]

# Set 'sim_1' fileset file properties for remote files
set file "$origin_dir/src/hw/test_multi_thread_scheduler.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "simulation testbench" -objects $file_obj
set_property -name "used_in_implementation" -value "0" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj


# Set 'sim_1' fileset file properties for local files
set file "sim/hdl/test_dma.v"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "sim/hdl/test_multi_thread_split.v"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "wcfg/test_multi_thread_scheduler_behav.wcfg"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "simulation" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj


# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "32bit" -value "0" -objects $obj
set_property -name "generic" -value "" -objects $obj
set_property -name "include_dirs" -value "" -objects $obj
set_property -name "incremental" -value "1" -objects $obj
set_property -name "name" -value "sim_1" -objects $obj
set_property -name "nl.cell" -value "" -objects $obj
set_property -name "nl.incl_unisim_models" -value "0" -objects $obj
set_property -name "nl.process_corner" -value "slow" -objects $obj
set_property -name "nl.rename_top" -value "" -objects $obj
set_property -name "nl.sdf_anno" -value "1" -objects $obj
set_property -name "nl.write_all_overrides" -value "0" -objects $obj
set_property -name "source_set" -value "sources_1" -objects $obj
set_property -name "systemc_include_dirs" -value "" -objects $obj
set_property -name "top" -value "test_dma" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "transport_int_delay" -value "0" -objects $obj
set_property -name "transport_path_delay" -value "0" -objects $obj
set_property -name "verilog_define" -value "" -objects $obj
set_property -name "verilog_uppercase" -value "0" -objects $obj
set_property -name "xelab.dll" -value "0" -objects $obj
set_property -name "xsim.compile.tcl.pre" -value "" -objects $obj
set_property -name "xsim.compile.xsc.more_options" -value "" -objects $obj
set_property -name "xsim.compile.xvhdl.more_options" -value "" -objects $obj
set_property -name "xsim.compile.xvhdl.nosort" -value "1" -objects $obj
set_property -name "xsim.compile.xvhdl.relax" -value "1" -objects $obj
set_property -name "xsim.compile.xvlog.more_options" -value "" -objects $obj
set_property -name "xsim.compile.xvlog.nosort" -value "1" -objects $obj
set_property -name "xsim.compile.xvlog.relax" -value "1" -objects $obj
set_property -name "xsim.elaborate.debug_level" -value "typical" -objects $obj
set_property -name "xsim.elaborate.load_glbl" -value "1" -objects $obj
set_property -name "xsim.elaborate.mt_level" -value "auto" -objects $obj
set_property -name "xsim.elaborate.rangecheck" -value "0" -objects $obj
set_property -name "xsim.elaborate.relax" -value "1" -objects $obj
set_property -name "xsim.elaborate.sdf_delay" -value "sdfmax" -objects $obj
set_property -name "xsim.elaborate.snapshot" -value "" -objects $obj
set_property -name "xsim.elaborate.xelab.more_options" -value "" -objects $obj
set_property -name "xsim.elaborate.xsc.more_options" -value "" -objects $obj
set_property -name "xsim.simulate.custom_tcl" -value "" -objects $obj
set_property -name "xsim.simulate.log_all_signals" -value "0" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1000ns" -objects $obj
set_property -name "xsim.simulate.saif" -value "" -objects $obj
set_property -name "xsim.simulate.saif_all_signals" -value "0" -objects $obj
set_property -name "xsim.simulate.saif_scope" -value "" -objects $obj
set_property -name "xsim.simulate.tcl.post" -value "" -objects $obj
set_property -name "xsim.simulate.wdb" -value "" -objects $obj
set_property -name "xsim.simulate.xsim.more_options" -value "" -objects $obj


# Adding sources referenced in BDs, if not already added
if { [get_files addrmonitor.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/addrmonitor.v
}
if { [get_files combile.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/combile.v
}
if { [get_files combile.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/combile.v
}
if { [get_files dimm_scheduler.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dimm_scheduler.v
}
if { [get_files dimm_scheduler.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dimm_scheduler.v
}
if { [get_files gate_axi.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/gate_axi.v
}
if { [get_files multi_thread_command_split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/multi_thread_command_split.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split_com_arbitter.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split_com_arbitter.v
}


# Proc to create BD design_5
proc cr_bd_design_5 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# addrmonitor, combile, combile, dimm_scheduler, dimm_scheduler, gate_axi, multi_thread_command_split, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, split, split, split, split, split, split, split_com_arbitter



  # CHANGE DESIGN NAME HERE
  set design_name design_5

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  user.org:user:AXI_Lite_slave_plug:1.0\
  xilinx.com:ip:axi_dma:7.1\
  xilinx.com:ip:ddr4:2.2\
  xilinx.com:ip:ila:6.2\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:smartconnect:1.0\
  xilinx.com:ip:util_ds_buf:2.1\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:xdma:4.1\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  addrmonitor\
  combile\
  combile\
  dimm_scheduler\
  dimm_scheduler\
  gate_axi\
  multi_thread_command_split\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  split\
  split\
  split\
  split\
  split\
  split\
  split_com_arbitter\
  "

   set list_mods_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_msg_id "BD_TCL-008" "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set ddr4_sdram_c1 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddr4_rtl:1.0 ddr4_sdram_c1 ]
  set default_250mhz_clk1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 default_250mhz_clk1 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000} \
   ] $default_250mhz_clk1
  set pci_express_x4 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pci_express_x4 ]
  set pcie_refclk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 pcie_refclk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {100000000} \
   ] $pcie_refclk

  # Create ports
  set pcie_perstn [ create_bd_port -dir I -type rst pcie_perstn ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $pcie_perstn
  set reset_0 [ create_bd_port -dir I -type rst reset_0 ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $reset_0

  # Create instance: AXI_Lite_slave_plug_1, and set properties
  set AXI_Lite_slave_plug_1 [ create_bd_cell -type ip -vlnv user.org:user:AXI_Lite_slave_plug:1.0 AXI_Lite_slave_plug_1 ]

  # Create instance: addrmonitor_0, and set properties
  set block_name addrmonitor
  set block_cell_name addrmonitor_0
  if { [catch {set addrmonitor_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $addrmonitor_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_dma_0, and set properties
  set axi_dma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_0 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_0

  # Create instance: axi_dma_1, and set properties
  set axi_dma_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_1 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_1

  # Create instance: axi_dma_2, and set properties
  set axi_dma_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_2 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_2

  # Create instance: axi_dma_3, and set properties
  set axi_dma_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_3 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_3

  # Create instance: axi_dma_4, and set properties
  set axi_dma_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_4 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_4

  # Create instance: axi_dma_5, and set properties
  set axi_dma_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_5 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_5

  # Create instance: axi_dma_6, and set properties
  set axi_dma_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_6 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_6

  # Create instance: axi_dma_7, and set properties
  set axi_dma_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_7 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_7

  # Create instance: combile_0, and set properties
  set block_name combile
  set block_cell_name combile_0
  if { [catch {set combile_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $combile_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: combile_1, and set properties
  set block_name combile
  set block_cell_name combile_1
  if { [catch {set combile_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $combile_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: ddr4_0, and set properties
  set ddr4_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ddr4:2.2 ddr4_0 ]
  set_property -dict [ list \
   CONFIG.ADDN_UI_CLKOUT1_FREQ_HZ {250} \
   CONFIG.C0_CLOCK_BOARD_INTERFACE {default_250mhz_clk1} \
   CONFIG.C0_DDR4_BOARD_INTERFACE {ddr4_sdram_c1} \
   CONFIG.RESET_BOARD_INTERFACE {reset} \
 ] $ddr4_0

  # Create instance: dimm_scheduler_0, and set properties
  set block_name dimm_scheduler
  set block_cell_name dimm_scheduler_0
  if { [catch {set dimm_scheduler_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dimm_scheduler_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIMM_BASE_ADDR {0x80000000} \
   CONFIG.DIMM_SIZE {0x40000000} \
 ] $dimm_scheduler_0

  # Create instance: dimm_scheduler_1, and set properties
  set block_name dimm_scheduler
  set block_cell_name dimm_scheduler_1
  if { [catch {set dimm_scheduler_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dimm_scheduler_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIMM_BASE_ADDR {0xa0000000} \
   CONFIG.DIMM_ID {1} \
   CONFIG.DIMM_SIZE {0x20000000} \
 ] $dimm_scheduler_1

  # Create instance: gate_axi_0, and set properties
  set block_name gate_axi
  set block_cell_name gate_axi_0
  if { [catch {set gate_axi_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $gate_axi_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: ila_0, and set properties
  set ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_0 ]
  set_property -dict [ list \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {2} \
   CONFIG.C_PROBE0_WIDTH {8} \
   CONFIG.C_PROBE1_WIDTH {5} \
 ] $ila_0

  # Create instance: ila_1, and set properties
  set ila_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_1 ]
  set_property -dict [ list \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {2} \
   CONFIG.C_PROBE0_WIDTH {8} \
   CONFIG.C_PROBE1_WIDTH {5} \
   CONFIG.C_PROBE2_WIDTH {1} \
 ] $ila_1

  # Create instance: ila_2, and set properties
  set ila_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_2 ]

  # Create instance: ila_3, and set properties
  set ila_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_3 ]
  set_property -dict [ list \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {9} \
   CONFIG.C_PROBE1_WIDTH {20} \
   CONFIG.C_PROBE3_WIDTH {4} \
   CONFIG.C_PROBE6_WIDTH {32} \
   CONFIG.C_PROBE7_WIDTH {32} \
   CONFIG.C_PROBE8_WIDTH {8} \
 ] $ila_3

  # Create instance: multi_thread_command_0, and set properties
  set block_name multi_thread_command_split
  set block_cell_name multi_thread_command_0
  if { [catch {set multi_thread_command_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $multi_thread_command_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIMM0_END_ADDR {0x9FFFFFFF} \
   CONFIG.DIMM0_START_ADDR {0x80000000} \
   CONFIG.DIMM1_END_ADDR {0xBFFFFFFF} \
   CONFIG.DIMM1_START_ADDR {0xa0000000} \
 ] $multi_thread_command_0

  # Create instance: pmunit_multidimm_0, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_0
  if { [catch {set pmunit_multidimm_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_1, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_1
  if { [catch {set pmunit_multidimm_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_2, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_2
  if { [catch {set pmunit_multidimm_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_2 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_3, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_3
  if { [catch {set pmunit_multidimm_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_3 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_4, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_4
  if { [catch {set pmunit_multidimm_4 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_4 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_5, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_5
  if { [catch {set pmunit_multidimm_5 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_5 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_6, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_6
  if { [catch {set pmunit_multidimm_6 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_6 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_7, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_7
  if { [catch {set pmunit_multidimm_7 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_7 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]
  set_property -dict [ list \
   CONFIG.RESET_BOARD_INTERFACE {reset} \
   CONFIG.USE_BOARD_FLOW {true} \
 ] $proc_sys_reset_0

  # Create instance: proc_sys_reset_1, and set properties
  set proc_sys_reset_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_1 ]

  # Create instance: smartconnect_0, and set properties
  set smartconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 smartconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_CLKS {3} \
   CONFIG.NUM_MI {3} \
   CONFIG.NUM_SI {10} \
 ] $smartconnect_0

  # Create instance: smartconnect_1, and set properties
  set smartconnect_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 smartconnect_1 ]
  set_property -dict [ list \
   CONFIG.NUM_CLKS {2} \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {1} \
 ] $smartconnect_1

  # Create instance: smartconnect_2, and set properties
  set smartconnect_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 smartconnect_2 ]
  set_property -dict [ list \
   CONFIG.NUM_SI {8} \
 ] $smartconnect_2

  # Create instance: split_0, and set properties
  set block_name split
  set block_cell_name split_0
  if { [catch {set split_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_1, and set properties
  set block_name split
  set block_cell_name split_1
  if { [catch {set split_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_3, and set properties
  set block_name split
  set block_cell_name split_3
  if { [catch {set split_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_3 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_4, and set properties
  set block_name split
  set block_cell_name split_4
  if { [catch {set split_4 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_4 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_5, and set properties
  set block_name split
  set block_cell_name split_5
  if { [catch {set split_5 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_5 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_6, and set properties
  set block_name split
  set block_cell_name split_6
  if { [catch {set split_6 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_6 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_com_arbitter_0, and set properties
  set block_name split_com_arbitter
  set block_cell_name split_com_arbitter_0
  if { [catch {set split_com_arbitter_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_com_arbitter_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: util_ds_buf_0, and set properties
  set util_ds_buf_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_0 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDSGTE} \
   CONFIG.DIFF_CLK_IN_BOARD_INTERFACE {pcie_refclk} \
   CONFIG.USE_BOARD_FLOW {true} \
 ] $util_ds_buf_0

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_vector_logic_0

  # Create instance: xdma_0, and set properties
  set xdma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xdma:4.1 xdma_0 ]
  set_property -dict [ list \
   CONFIG.PCIE_BOARD_INTERFACE {pci_express_x4} \
   CONFIG.PF0_DEVICE_ID_mqdma {9024} \
   CONFIG.PF2_DEVICE_ID_mqdma {9024} \
   CONFIG.PF3_DEVICE_ID_mqdma {9024} \
   CONFIG.SYS_RST_N_BOARD_INTERFACE {pcie_perstn} \
   CONFIG.axi_addr_width {32} \
   CONFIG.axisten_freq {250} \
   CONFIG.bar_indicator {BAR_0} \
   CONFIG.en_axi_slave_if {false} \
   CONFIG.functional_mode {AXI_Bridge} \
   CONFIG.pciebar2axibar_0 {0x20000000} \
   CONFIG.pciebar2axibar_1 {0x44A00000} \
   CONFIG.pciebar2axibar_2 {0x80000000} \
   CONFIG.pf0_bar0_64bit {false} \
   CONFIG.pf0_bar0_prefetchable {false} \
   CONFIG.pf0_bar1_enabled {true} \
   CONFIG.pf0_bar1_scale {Kilobytes} \
   CONFIG.pf0_bar1_size {4} \
   CONFIG.pf0_bar2_64bit {true} \
   CONFIG.pf0_bar2_enabled {true} \
   CONFIG.pf0_bar2_prefetchable {true} \
   CONFIG.pf0_bar2_scale {Gigabytes} \
   CONFIG.pf0_bar2_size {1} \
   CONFIG.pf0_device_id {9024} \
   CONFIG.pf0_msix_cap_pba_bir {BAR_0} \
   CONFIG.pf0_msix_cap_table_bir {BAR_0} \
   CONFIG.pl_link_cap_max_link_speed {5.0_GT/s} \
   CONFIG.pl_link_cap_max_link_width {X4} \
   CONFIG.plltype {QPLL1} \
   CONFIG.xdma_axilite_slave {true} \
 ] $xdma_0

  # Create interface connections
  connect_bd_intf_net -intf_net axi_dma_0_M_AXIS_MM2S [get_bd_intf_pins axi_dma_0/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_0/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_MM2S [get_bd_intf_pins axi_dma_0/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S01_AXI]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_S2MM [get_bd_intf_pins axi_dma_0/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S02_AXI]
  connect_bd_intf_net -intf_net axi_dma_1_M_AXIS_MM2S [get_bd_intf_pins axi_dma_1/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_1/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_1_M_AXI_MM2S [get_bd_intf_pins axi_dma_1/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S03_AXI]
  connect_bd_intf_net -intf_net axi_dma_1_M_AXI_S2MM [get_bd_intf_pins axi_dma_1/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S04_AXI]
  connect_bd_intf_net -intf_net axi_dma_2_M_AXIS_MM2S [get_bd_intf_pins axi_dma_2/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_2/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_2_M_AXI_MM2S [get_bd_intf_pins axi_dma_2/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S07_AXI]
  connect_bd_intf_net -intf_net axi_dma_2_M_AXI_S2MM [get_bd_intf_pins axi_dma_2/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S08_AXI]
  connect_bd_intf_net -intf_net axi_dma_3_M_AXIS_MM2S [get_bd_intf_pins axi_dma_3/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_3/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_3_M_AXI_MM2S [get_bd_intf_pins axi_dma_3/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S05_AXI]
  connect_bd_intf_net -intf_net axi_dma_3_M_AXI_S2MM [get_bd_intf_pins axi_dma_3/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S06_AXI]
  connect_bd_intf_net -intf_net axi_dma_4_M_AXIS_MM2S [get_bd_intf_pins axi_dma_4/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_4/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_4_M_AXI_MM2S [get_bd_intf_pins axi_dma_4/M_AXI_MM2S] [get_bd_intf_pins smartconnect_2/S00_AXI]
  connect_bd_intf_net -intf_net axi_dma_4_M_AXI_S2MM [get_bd_intf_pins axi_dma_4/M_AXI_S2MM] [get_bd_intf_pins smartconnect_2/S01_AXI]
  connect_bd_intf_net -intf_net axi_dma_5_M_AXIS_MM2S [get_bd_intf_pins axi_dma_5/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_5/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_5_M_AXI_MM2S [get_bd_intf_pins axi_dma_5/M_AXI_MM2S] [get_bd_intf_pins smartconnect_2/S02_AXI]
  connect_bd_intf_net -intf_net axi_dma_5_M_AXI_S2MM [get_bd_intf_pins axi_dma_5/M_AXI_S2MM] [get_bd_intf_pins smartconnect_2/S03_AXI]
  connect_bd_intf_net -intf_net axi_dma_6_M_AXIS_MM2S [get_bd_intf_pins axi_dma_6/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_6/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_6_M_AXI_MM2S [get_bd_intf_pins axi_dma_6/M_AXI_MM2S] [get_bd_intf_pins smartconnect_2/S04_AXI]
  connect_bd_intf_net -intf_net axi_dma_6_M_AXI_S2MM [get_bd_intf_pins axi_dma_6/M_AXI_S2MM] [get_bd_intf_pins smartconnect_2/S05_AXI]
  connect_bd_intf_net -intf_net axi_dma_7_M_AXIS_MM2S [get_bd_intf_pins axi_dma_7/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_7/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_7_M_AXI_MM2S [get_bd_intf_pins axi_dma_7/M_AXI_MM2S] [get_bd_intf_pins smartconnect_2/S06_AXI]
  connect_bd_intf_net -intf_net axi_dma_7_M_AXI_S2MM [get_bd_intf_pins axi_dma_7/M_AXI_S2MM] [get_bd_intf_pins smartconnect_2/S07_AXI]
  connect_bd_intf_net -intf_net ddr4_0_C0_DDR4 [get_bd_intf_ports ddr4_sdram_c1] [get_bd_intf_pins ddr4_0/C0_DDR4]
  connect_bd_intf_net -intf_net default_250mhz_clk1_1 [get_bd_intf_ports default_250mhz_clk1] [get_bd_intf_pins ddr4_0/C0_SYS_CLK]
  connect_bd_intf_net -intf_net pcie_refclk_1 [get_bd_intf_ports pcie_refclk] [get_bd_intf_pins util_ds_buf_0/CLK_IN_D]
  connect_bd_intf_net -intf_net pmunit_multidimm_0_M_AXI [get_bd_intf_pins axi_dma_0/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_0/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_1_M_AXI [get_bd_intf_pins axi_dma_1/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_1/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_2_M_AXI [get_bd_intf_pins axi_dma_2/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_2/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_3_M_AXI [get_bd_intf_pins axi_dma_3/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_3/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_4_M_AXI [get_bd_intf_pins axi_dma_4/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_4/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_5_M_AXI [get_bd_intf_pins axi_dma_5/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_5/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_6_M_AXI [get_bd_intf_pins axi_dma_6/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_6/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_7_M_AXI [get_bd_intf_pins axi_dma_7/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_7/M_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M00_AXI [get_bd_intf_pins AXI_Lite_slave_plug_1/S00_AXI] [get_bd_intf_pins smartconnect_0/M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M01_AXI [get_bd_intf_pins ddr4_0/C0_DDR4_S_AXI] [get_bd_intf_pins smartconnect_0/M01_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M02_AXI [get_bd_intf_pins smartconnect_0/M02_AXI] [get_bd_intf_pins xdma_0/S_AXI_LITE]
  connect_bd_intf_net -intf_net smartconnect_1_M00_AXI [get_bd_intf_pins smartconnect_0/S00_AXI] [get_bd_intf_pins smartconnect_1/M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_1_M01_AXI [get_bd_intf_pins multi_thread_command_0/S_AXI] [get_bd_intf_pins smartconnect_1/M01_AXI]
connect_bd_intf_net -intf_net [get_bd_intf_nets smartconnect_1_M01_AXI] [get_bd_intf_pins ila_2/SLOT_0_AXI] [get_bd_intf_pins smartconnect_1/M01_AXI]
  connect_bd_intf_net -intf_net smartconnect_2_M00_AXI [get_bd_intf_pins smartconnect_0/S09_AXI] [get_bd_intf_pins smartconnect_2/M00_AXI]
  connect_bd_intf_net -intf_net xdma_0_M_AXI_B [get_bd_intf_pins smartconnect_1/S00_AXI] [get_bd_intf_pins xdma_0/M_AXI_B]
  connect_bd_intf_net -intf_net xdma_0_pcie_mgt [get_bd_intf_ports pci_express_x4] [get_bd_intf_pins xdma_0/pcie_mgt]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins dimm_scheduler_0/command_broadcast] [get_bd_pins pmunit_multidimm_0/COMMAND_BUS] [get_bd_pins pmunit_multidimm_1/COMMAND_BUS] [get_bd_pins pmunit_multidimm_2/COMMAND_BUS] [get_bd_pins pmunit_multidimm_3/COMMAND_BUS]
  connect_bd_net -net Net1 [get_bd_pins dimm_scheduler_0/current_log_addr] [get_bd_pins pmunit_multidimm_0/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_1/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_2/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_3/CURRENT_LOG_ADDR]
  connect_bd_net -net addrmonitor_0_m00_axi_awaddr [get_bd_pins addrmonitor_0/m00_axi_awaddr] [get_bd_pins smartconnect_1/S00_AXI_awaddr]
  connect_bd_net -net addrmonitor_0_m00_axi_awvalid [get_bd_pins addrmonitor_0/m00_axi_awvalid] [get_bd_pins smartconnect_1/S00_AXI_awvalid]
  connect_bd_net -net addrmonitor_0_m00_axi_wdata [get_bd_pins addrmonitor_0/m00_axi_wdata] [get_bd_pins smartconnect_1/S00_AXI_wdata]
  connect_bd_net -net addrmonitor_0_m00_axi_wvalid [get_bd_pins addrmonitor_0/m00_axi_wvalid] [get_bd_pins smartconnect_1/S00_AXI_wvalid]
  connect_bd_net -net addrmonitor_0_pmem_obj_offset [get_bd_pins addrmonitor_0/pmem_obj_offset] [get_bd_pins multi_thread_command_0/pmem_obj_offset]
  connect_bd_net -net addrmonitor_0_pmem_obj_offset_valid [get_bd_pins addrmonitor_0/pmem_obj_offset_valid] [get_bd_pins ila_3/probe2] [get_bd_pins multi_thread_command_0/pmem_obj_offset_valid]
  connect_bd_net -net combile_0_out [get_bd_pins combile_0/outp] [get_bd_pins dimm_scheduler_0/nearpmunit_done]
  connect_bd_net -net combile_1_outp [get_bd_pins combile_1/outp] [get_bd_pins dimm_scheduler_1/nearpmunit_done]
  connect_bd_net -net ddr4_0_addn_ui_clkout1 [get_bd_pins AXI_Lite_slave_plug_1/s00_axi_aclk] [get_bd_pins addrmonitor_0/clkmemops] [get_bd_pins axi_dma_0/m_axi_mm2s_aclk] [get_bd_pins axi_dma_0/m_axi_s2mm_aclk] [get_bd_pins axi_dma_0/s_axi_lite_aclk] [get_bd_pins axi_dma_1/m_axi_mm2s_aclk] [get_bd_pins axi_dma_1/m_axi_s2mm_aclk] [get_bd_pins axi_dma_1/s_axi_lite_aclk] [get_bd_pins axi_dma_2/m_axi_mm2s_aclk] [get_bd_pins axi_dma_2/m_axi_s2mm_aclk] [get_bd_pins axi_dma_2/s_axi_lite_aclk] [get_bd_pins axi_dma_3/m_axi_mm2s_aclk] [get_bd_pins axi_dma_3/m_axi_s2mm_aclk] [get_bd_pins axi_dma_3/s_axi_lite_aclk] [get_bd_pins axi_dma_4/m_axi_mm2s_aclk] [get_bd_pins axi_dma_4/m_axi_s2mm_aclk] [get_bd_pins axi_dma_4/s_axi_lite_aclk] [get_bd_pins axi_dma_5/m_axi_mm2s_aclk] [get_bd_pins axi_dma_5/m_axi_s2mm_aclk] [get_bd_pins axi_dma_5/s_axi_lite_aclk] [get_bd_pins axi_dma_6/m_axi_mm2s_aclk] [get_bd_pins axi_dma_6/m_axi_s2mm_aclk] [get_bd_pins axi_dma_6/s_axi_lite_aclk] [get_bd_pins axi_dma_7/m_axi_mm2s_aclk] [get_bd_pins axi_dma_7/m_axi_s2mm_aclk] [get_bd_pins axi_dma_7/s_axi_lite_aclk] [get_bd_pins ddr4_0/addn_ui_clkout1] [get_bd_pins dimm_scheduler_0/clk] [get_bd_pins dimm_scheduler_1/clk] [get_bd_pins gate_axi_0/clk_dest] [get_bd_pins ila_0/clk] [get_bd_pins ila_1/clk] [get_bd_pins ila_2/clk] [get_bd_pins ila_3/clk] [get_bd_pins multi_thread_command_0/S_AXI_ACLK] [get_bd_pins pmunit_multidimm_0/clk] [get_bd_pins pmunit_multidimm_1/clk] [get_bd_pins pmunit_multidimm_2/clk] [get_bd_pins pmunit_multidimm_3/clk] [get_bd_pins pmunit_multidimm_4/clk] [get_bd_pins pmunit_multidimm_5/clk] [get_bd_pins pmunit_multidimm_6/clk] [get_bd_pins pmunit_multidimm_7/clk] [get_bd_pins proc_sys_reset_0/slowest_sync_clk] [get_bd_pins smartconnect_0/aclk] [get_bd_pins smartconnect_1/aclk1] [get_bd_pins smartconnect_2/aclk] [get_bd_pins split_com_arbitter_0/clk]
  connect_bd_net -net ddr4_0_c0_ddr4_ui_clk [get_bd_pins ddr4_0/c0_ddr4_ui_clk] [get_bd_pins gate_axi_0/clk_src] [get_bd_pins proc_sys_reset_1/slowest_sync_clk] [get_bd_pins smartconnect_0/aclk2]
  connect_bd_net -net ddr4_0_c0_ddr4_ui_clk_sync_rst [get_bd_pins ddr4_0/c0_ddr4_ui_clk_sync_rst] [get_bd_pins proc_sys_reset_1/ext_reset_in]
  connect_bd_net -net dimm_scheduler_0_command_broadcast_valid [get_bd_pins dimm_scheduler_0/command_broadcast_valid] [get_bd_pins split_0/inp]
  connect_bd_net -net dimm_scheduler_0_complete_split_out [get_bd_pins dimm_scheduler_0/complete_split_out] [get_bd_pins split_com_arbitter_0/complete_split_in0]
  connect_bd_net -net dimm_scheduler_0_nearpm_go_ahead [get_bd_pins dimm_scheduler_0/nearpm_go_ahead] [get_bd_pins split_1/inp]
  connect_bd_net -net dimm_scheduler_0_pending_complete_split_out [get_bd_pins dimm_scheduler_0/pending_complete_split_out] [get_bd_pins split_com_arbitter_0/pending_complete_split_in0]
  connect_bd_net -net dimm_scheduler_0_slall_mem_channel [get_bd_pins dimm_scheduler_0/slall_mem_channel] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net dimm_scheduler_0_test_nearrPM_status [get_bd_pins dimm_scheduler_0/test_nearrPM_status] [get_bd_pins ila_0/probe0]
  connect_bd_net -net dimm_scheduler_0_test_scheduler_state [get_bd_pins dimm_scheduler_0/test_scheduler_state] [get_bd_pins ila_0/probe1]
  connect_bd_net -net dimm_scheduler_1_command_broadcast [get_bd_pins dimm_scheduler_1/command_broadcast] [get_bd_pins pmunit_multidimm_4/COMMAND_BUS] [get_bd_pins pmunit_multidimm_5/COMMAND_BUS] [get_bd_pins pmunit_multidimm_6/COMMAND_BUS] [get_bd_pins pmunit_multidimm_7/COMMAND_BUS]
  connect_bd_net -net dimm_scheduler_1_command_broadcast_valid [get_bd_pins dimm_scheduler_1/command_broadcast_valid] [get_bd_pins split_3/inp]
  connect_bd_net -net dimm_scheduler_1_complete_split_out [get_bd_pins dimm_scheduler_1/complete_split_out] [get_bd_pins split_com_arbitter_0/complete_split_in1]
  connect_bd_net -net dimm_scheduler_1_current_log_addr [get_bd_pins dimm_scheduler_1/current_log_addr] [get_bd_pins pmunit_multidimm_4/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_5/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_6/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_7/CURRENT_LOG_ADDR]
  connect_bd_net -net dimm_scheduler_1_nearpm_go_ahead [get_bd_pins dimm_scheduler_1/nearpm_go_ahead] [get_bd_pins split_5/inp]
  connect_bd_net -net dimm_scheduler_1_pending_complete_split_out [get_bd_pins dimm_scheduler_1/pending_complete_split_out] [get_bd_pins split_com_arbitter_0/pending_complete_split_in1]
  connect_bd_net -net dimm_scheduler_1_slall_mem_channel [get_bd_pins dimm_scheduler_1/slall_mem_channel] [get_bd_pins util_vector_logic_0/Op2]
  connect_bd_net -net dimm_scheduler_1_test_nearrPM_status [get_bd_pins dimm_scheduler_1/test_nearrPM_status] [get_bd_pins ila_1/probe0]
  connect_bd_net -net dimm_scheduler_1_test_scheduler_state [get_bd_pins dimm_scheduler_1/test_scheduler_state] [get_bd_pins ila_1/probe1]
  connect_bd_net -net gate_axi_0_arready_out [get_bd_pins gate_axi_0/arready_out] [get_bd_pins smartconnect_1/M00_AXI_arready]
  connect_bd_net -net gate_axi_0_arvalid_out [get_bd_pins gate_axi_0/arvalid_out] [get_bd_pins smartconnect_0/S00_AXI_arvalid]
  connect_bd_net -net gate_axi_0_awaddr_out [get_bd_pins gate_axi_0/awaddr_out] [get_bd_pins smartconnect_0/S00_AXI_awaddr]
  connect_bd_net -net gate_axi_0_awready_out [get_bd_pins gate_axi_0/awready_out] [get_bd_pins smartconnect_1/M00_AXI_awready]
  connect_bd_net -net gate_axi_0_awvalid_out [get_bd_pins gate_axi_0/awvalid_out] [get_bd_pins smartconnect_0/S00_AXI_awvalid]
  connect_bd_net -net gate_axi_0_bready_out [get_bd_pins gate_axi_0/bready_out] [get_bd_pins smartconnect_0/S00_AXI_bready]
  connect_bd_net -net gate_axi_0_bvalid_out [get_bd_pins gate_axi_0/bvalid_out] [get_bd_pins smartconnect_1/M00_AXI_bvalid]
  connect_bd_net -net gate_axi_0_rready_out [get_bd_pins gate_axi_0/rready_out] [get_bd_pins smartconnect_0/S00_AXI_rready]
  connect_bd_net -net gate_axi_0_rvalid_out [get_bd_pins gate_axi_0/rvalid_out] [get_bd_pins smartconnect_1/M00_AXI_rvalid]
  connect_bd_net -net gate_axi_0_wready_out [get_bd_pins gate_axi_0/wready_out] [get_bd_pins smartconnect_1/M00_AXI_wready]
  connect_bd_net -net gate_axi_0_wvalid_out [get_bd_pins gate_axi_0/wvalid_out] [get_bd_pins smartconnect_0/S00_AXI_wvalid]
  connect_bd_net -net multi_thread_command_0_command_broadcast [get_bd_pins dimm_scheduler_0/command_in] [get_bd_pins dimm_scheduler_1/command_in] [get_bd_pins multi_thread_command_0/command_broadcast]
  connect_bd_net -net multi_thread_command_0_command_broadcast_valid [get_bd_pins ila_3/probe8] [get_bd_pins multi_thread_command_0/command_broadcast_valid] [get_bd_pins split_6/inp]
  connect_bd_net -net multi_thread_command_0_oid_offset_lookup [get_bd_pins addrmonitor_0/OID_OFFSET_LOOKUP] [get_bd_pins ila_3/probe1] [get_bd_pins multi_thread_command_0/oid_offset_lookup]
  connect_bd_net -net multi_thread_command_0_oid_valid [get_bd_pins addrmonitor_0/OID_VALID] [get_bd_pins ila_3/probe0] [get_bd_pins multi_thread_command_0/oid_valid]
  connect_bd_net -net multi_thread_command_0_slall_mem_channel [get_bd_pins gate_axi_0/stall_channel] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net multi_thread_command_0_test_buffer0_select_valid [get_bd_pins ila_3/probe4] [get_bd_pins multi_thread_command_0/test_buffer0_select_valid]
  connect_bd_net -net multi_thread_command_0_test_buffer1_select_valid [get_bd_pins ila_3/probe5] [get_bd_pins multi_thread_command_0/test_buffer1_select_valid]
  connect_bd_net -net multi_thread_command_0_test_counter [get_bd_pins ila_3/probe7] [get_bd_pins multi_thread_command_0/test_counter]
  connect_bd_net -net multi_thread_command_0_test_fifo_buffer_full [get_bd_pins ila_3/probe6] [get_bd_pins multi_thread_command_0/test_fifo_buffer_full]
  connect_bd_net -net multi_thread_command_0_test_scheduler_state [get_bd_pins ila_3/probe3] [get_bd_pins multi_thread_command_0/test_scheduler_state]
  connect_bd_net -net pcie_perstn_1 [get_bd_ports pcie_perstn] [get_bd_pins xdma_0/sys_rst_n]
  connect_bd_net -net pmunit_multidimm_0_PMUNIT_STATE [get_bd_pins combile_0/in0] [get_bd_pins pmunit_multidimm_0/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_1_PMUNIT_STATE [get_bd_pins combile_0/in1] [get_bd_pins pmunit_multidimm_1/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_2_PMUNIT_STATE [get_bd_pins combile_0/in2] [get_bd_pins pmunit_multidimm_2/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_3_PMUNIT_STATE [get_bd_pins combile_0/in3] [get_bd_pins pmunit_multidimm_3/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_4_PMUNIT_STATE [get_bd_pins combile_1/in0] [get_bd_pins pmunit_multidimm_4/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_5_PMUNIT_STATE [get_bd_pins combile_1/in1] [get_bd_pins pmunit_multidimm_5/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_6_PMUNIT_STATE [get_bd_pins combile_1/in2] [get_bd_pins pmunit_multidimm_6/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_7_PMUNIT_STATE [get_bd_pins combile_1/in3] [get_bd_pins pmunit_multidimm_7/PMUNIT_STATE]
  connect_bd_net -net proc_sys_reset_1_peripheral_aresetn [get_bd_pins ddr4_0/c0_ddr4_aresetn] [get_bd_pins proc_sys_reset_1/peripheral_aresetn]
  connect_bd_net -net reset_0_1 [get_bd_ports reset_0] [get_bd_pins ddr4_0/sys_rst] [get_bd_pins proc_sys_reset_0/ext_reset_in]
  connect_bd_net -net reset_1 [get_bd_pins AXI_Lite_slave_plug_1/s00_axi_aresetn] [get_bd_pins axi_dma_0/axi_resetn] [get_bd_pins axi_dma_1/axi_resetn] [get_bd_pins axi_dma_2/axi_resetn] [get_bd_pins axi_dma_3/axi_resetn] [get_bd_pins axi_dma_4/axi_resetn] [get_bd_pins axi_dma_5/axi_resetn] [get_bd_pins axi_dma_6/axi_resetn] [get_bd_pins axi_dma_7/axi_resetn] [get_bd_pins dimm_scheduler_0/aresetn] [get_bd_pins dimm_scheduler_1/aresetn] [get_bd_pins gate_axi_0/aresetn] [get_bd_pins multi_thread_command_0/S_AXI_ARESETN] [get_bd_pins pmunit_multidimm_0/reset] [get_bd_pins pmunit_multidimm_1/reset] [get_bd_pins pmunit_multidimm_2/reset] [get_bd_pins pmunit_multidimm_3/reset] [get_bd_pins pmunit_multidimm_4/reset] [get_bd_pins pmunit_multidimm_5/reset] [get_bd_pins pmunit_multidimm_6/reset] [get_bd_pins pmunit_multidimm_7/reset] [get_bd_pins proc_sys_reset_0/peripheral_aresetn] [get_bd_pins smartconnect_0/aresetn] [get_bd_pins smartconnect_2/aresetn] [get_bd_pins split_com_arbitter_0/aresetn]
  connect_bd_net -net smartconnect_0_S00_AXI_arready [get_bd_pins gate_axi_0/arready_in] [get_bd_pins smartconnect_0/S00_AXI_arready]
  connect_bd_net -net smartconnect_0_S00_AXI_awready [get_bd_pins gate_axi_0/awready_in] [get_bd_pins smartconnect_0/S00_AXI_awready]
  connect_bd_net -net smartconnect_0_S00_AXI_bvalid [get_bd_pins gate_axi_0/bvalid_in] [get_bd_pins smartconnect_0/S00_AXI_bvalid]
  connect_bd_net -net smartconnect_0_S00_AXI_rvalid [get_bd_pins gate_axi_0/rvalid_in] [get_bd_pins smartconnect_0/S00_AXI_rvalid]
  connect_bd_net -net smartconnect_0_S00_AXI_wready [get_bd_pins gate_axi_0/wready_in] [get_bd_pins smartconnect_0/S00_AXI_wready]
  connect_bd_net -net smartconnect_1_M00_AXI_arvalid [get_bd_pins gate_axi_0/arvalid_in] [get_bd_pins smartconnect_1/M00_AXI_arvalid]
  connect_bd_net -net smartconnect_1_M00_AXI_awaddr [get_bd_pins gate_axi_0/awaddr_in] [get_bd_pins smartconnect_1/M00_AXI_awaddr]
  connect_bd_net -net smartconnect_1_M00_AXI_awvalid [get_bd_pins gate_axi_0/awvalid_in] [get_bd_pins smartconnect_1/M00_AXI_awvalid]
  connect_bd_net -net smartconnect_1_M00_AXI_bready [get_bd_pins gate_axi_0/bready_in] [get_bd_pins smartconnect_1/M00_AXI_bready]
  connect_bd_net -net smartconnect_1_M00_AXI_rready [get_bd_pins gate_axi_0/rready_in] [get_bd_pins smartconnect_1/M00_AXI_rready]
  connect_bd_net -net smartconnect_1_M00_AXI_wvalid [get_bd_pins gate_axi_0/wvalid_in] [get_bd_pins smartconnect_1/M00_AXI_wvalid]
  connect_bd_net -net split_0_out0 [get_bd_pins pmunit_multidimm_0/COMMAND_VALID] [get_bd_pins split_0/out0]
  connect_bd_net -net split_0_out1 [get_bd_pins pmunit_multidimm_1/COMMAND_VALID] [get_bd_pins split_0/out1]
  connect_bd_net -net split_0_out2 [get_bd_pins pmunit_multidimm_2/COMMAND_VALID] [get_bd_pins split_0/out2]
  connect_bd_net -net split_0_out3 [get_bd_pins pmunit_multidimm_3/COMMAND_VALID] [get_bd_pins split_0/out3]
  connect_bd_net -net split_1_out0 [get_bd_pins pmunit_multidimm_0/START_EXECUTION] [get_bd_pins split_1/out0]
  connect_bd_net -net split_1_out1 [get_bd_pins pmunit_multidimm_1/START_EXECUTION] [get_bd_pins split_1/out1]
  connect_bd_net -net split_1_out2 [get_bd_pins pmunit_multidimm_2/START_EXECUTION] [get_bd_pins split_1/out2]
  connect_bd_net -net split_1_out3 [get_bd_pins pmunit_multidimm_3/START_EXECUTION] [get_bd_pins split_1/out3]
  connect_bd_net -net split_3_out0 [get_bd_pins pmunit_multidimm_4/COMMAND_VALID] [get_bd_pins split_3/out0]
  connect_bd_net -net split_3_out1 [get_bd_pins pmunit_multidimm_5/COMMAND_VALID] [get_bd_pins split_3/out1]
  connect_bd_net -net split_3_out2 [get_bd_pins pmunit_multidimm_6/COMMAND_VALID] [get_bd_pins split_3/out2]
  connect_bd_net -net split_3_out3 [get_bd_pins pmunit_multidimm_7/COMMAND_VALID] [get_bd_pins split_3/out3]
  connect_bd_net -net split_4_out0 [get_bd_pins dimm_scheduler_0/complete_split_cmd_idx_valid_in] [get_bd_pins split_4/out0]
  connect_bd_net -net split_4_out1 [get_bd_pins dimm_scheduler_1/complete_split_cmd_idx_valid_in] [get_bd_pins split_4/out1]
  connect_bd_net -net split_5_out0 [get_bd_pins pmunit_multidimm_4/START_EXECUTION] [get_bd_pins split_5/out0]
  connect_bd_net -net split_5_out1 [get_bd_pins pmunit_multidimm_5/START_EXECUTION] [get_bd_pins split_5/out1]
  connect_bd_net -net split_5_out2 [get_bd_pins pmunit_multidimm_6/START_EXECUTION] [get_bd_pins split_5/out2]
  connect_bd_net -net split_5_out3 [get_bd_pins pmunit_multidimm_7/START_EXECUTION] [get_bd_pins split_5/out3]
  connect_bd_net -net split_6_out0 [get_bd_pins dimm_scheduler_0/command_valid] [get_bd_pins split_6/out0]
  connect_bd_net -net split_6_out1 [get_bd_pins dimm_scheduler_1/command_valid] [get_bd_pins split_6/out1]
  connect_bd_net -net split_com_arbitter_0_complete_split_cmd [get_bd_pins dimm_scheduler_0/complete_split_cmd_idx_in] [get_bd_pins dimm_scheduler_1/complete_split_cmd_idx_in] [get_bd_pins split_com_arbitter_0/complete_split_cmd]
  connect_bd_net -net split_com_arbitter_0_complete_split_cmd_valid [get_bd_pins split_4/inp] [get_bd_pins split_com_arbitter_0/complete_split_cmd_valid]
  connect_bd_net -net split_com_arbitter_0_read_complete_split0 [get_bd_pins dimm_scheduler_0/read_complete_split] [get_bd_pins split_com_arbitter_0/read_complete_split0]
  connect_bd_net -net split_com_arbitter_0_read_complete_split1 [get_bd_pins dimm_scheduler_1/read_complete_split] [get_bd_pins split_com_arbitter_0/read_complete_split1]
  connect_bd_net -net util_ds_buf_0_IBUF_DS_ODIV2 [get_bd_pins util_ds_buf_0/IBUF_DS_ODIV2] [get_bd_pins xdma_0/sys_clk]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT [get_bd_pins util_ds_buf_0/IBUF_OUT] [get_bd_pins xdma_0/sys_clk_gt]
  connect_bd_net -net xdma_0_axi_aclk [get_bd_pins addrmonitor_0/clk] [get_bd_pins smartconnect_0/aclk1] [get_bd_pins smartconnect_1/aclk] [get_bd_pins xdma_0/axi_aclk]
  connect_bd_net -net xdma_0_axi_aresetn [get_bd_pins addrmonitor_0/aresetn] [get_bd_pins smartconnect_1/aresetn] [get_bd_pins xdma_0/axi_aresetn]
  connect_bd_net -net xdma_0_m_axib_awaddr [get_bd_pins addrmonitor_0/s00_axi_awaddr] [get_bd_pins dimm_scheduler_0/awaddr] [get_bd_pins dimm_scheduler_1/awaddr] [get_bd_pins xdma_0/m_axib_awaddr]
  connect_bd_net -net xdma_0_m_axib_awvalid [get_bd_pins addrmonitor_0/s00_axi_awvalid] [get_bd_pins dimm_scheduler_0/awvalid] [get_bd_pins dimm_scheduler_1/awvalid] [get_bd_pins xdma_0/m_axib_awvalid]
  connect_bd_net -net xdma_0_m_axib_wdata [get_bd_pins addrmonitor_0/s00_axi_wdata] [get_bd_pins xdma_0/m_axib_wdata]
  connect_bd_net -net xdma_0_m_axib_wvalid [get_bd_pins addrmonitor_0/s00_axi_wvalid] [get_bd_pins xdma_0/m_axib_wvalid]

  # Create address segments
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_0/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_0/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_0/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_1/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_1/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_1/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_1/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_1/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_1/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_2/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_2/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_2/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_2/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_2/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_2/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_3/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_3/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_3/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_3/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_3/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_3/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_4/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_4/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_4/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_4/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_4/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_4/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_5/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_5/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_5/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_5/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_5/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_5/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_6/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_6/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_6/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_6/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_6/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_6/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_7/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_7/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_7/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_7/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_7/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_7/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_0/M_AXI] [get_bd_addr_segs axi_dma_0/S_AXI_LITE/Reg] SEG_axi_dma_0_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_1/M_AXI] [get_bd_addr_segs axi_dma_1/S_AXI_LITE/Reg] SEG_axi_dma_1_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_2/M_AXI] [get_bd_addr_segs axi_dma_2/S_AXI_LITE/Reg] SEG_axi_dma_2_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_3/M_AXI] [get_bd_addr_segs axi_dma_3/S_AXI_LITE/Reg] SEG_axi_dma_3_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_4/M_AXI] [get_bd_addr_segs axi_dma_4/S_AXI_LITE/Reg] SEG_axi_dma_4_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_5/M_AXI] [get_bd_addr_segs axi_dma_5/S_AXI_LITE/Reg] SEG_axi_dma_5_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_6/M_AXI] [get_bd_addr_segs axi_dma_6/S_AXI_LITE/Reg] SEG_axi_dma_6_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_7/M_AXI] [get_bd_addr_segs axi_dma_7/S_AXI_LITE/Reg] SEG_axi_dma_7_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x44A00000 [get_bd_addr_spaces xdma_0/M_AXI_B] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces xdma_0/M_AXI_B] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x00020000 -offset 0x20000000 [get_bd_addr_spaces xdma_0/M_AXI_B] [get_bd_addr_segs multi_thread_command_0/S_AXI/reg0] SEG_multi_thread_command_0_reg0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces xdma_0/M_AXI_B] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0


  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_5()
cr_bd_design_5 ""
set_property EXCLUDE_DEBUG_LOGIC "0" [get_files design_5.bd ] 
set_property GENERATE_SYNTH_CHECKPOINT "1" [get_files design_5.bd ] 
set_property IS_ENABLED "1" [get_files design_5.bd ] 
set_property IS_GLOBAL_INCLUDE "0" [get_files design_5.bd ] 
set_property IS_LOCKED "0" [get_files design_5.bd ] 
set_property IS_MANAGED "0" [get_files design_5.bd ] 
set_property LIBRARY "xil_defaultlib" [get_files design_5.bd ] 
set_property PATH_MODE "RelativeFirst" [get_files design_5.bd ] 
set_property PFM_NAME "" [get_files design_5.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files design_5.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_5.bd ] 
set_property USED_IN "synthesis implementation simulation" [get_files design_5.bd ] 
set_property USED_IN_IMPLEMENTATION "1" [get_files design_5.bd ] 
set_property USED_IN_SIMULATION "1" [get_files design_5.bd ] 
set_property USED_IN_SYNTHESIS "1" [get_files design_5.bd ] 

if { [get_files addrmonitor.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/addrmonitor.v
}
if { [get_files combile.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/combile.v
}
if { [get_files combile.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/combile.v
}
if { [get_files gate_axi.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/gate_axi.v
}
if { [get_files multi_thread_command_split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/multi_thread_command_split.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split_com_arbitter.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split_com_arbitter.v
}
if { [get_files dimm_scheduler_blocking.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dimm_scheduler_blocking.v
}
if { [get_files dimm_scheduler_blocking.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dimm_scheduler_blocking.v
}


# Proc to create BD design_3
proc cr_bd_design_3 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# addrmonitor, combile, combile, dimm_scheduler_blocking, dimm_scheduler_blocking, gate_axi, multi_thread_command_split, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, split, split, split, split, split, split, split_com_arbitter



  # CHANGE DESIGN NAME HERE
  set design_name design_3

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  user.org:user:AXI_Lite_slave_plug:1.0\
  xilinx.com:ip:axi_dma:7.1\
  xilinx.com:ip:ddr4:2.2\
  xilinx.com:ip:ila:6.2\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:smartconnect:1.0\
  xilinx.com:ip:util_ds_buf:2.1\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:xdma:4.1\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  addrmonitor\
  combile\
  combile\
  dimm_scheduler_blocking\
  dimm_scheduler_blocking\
  gate_axi\
  multi_thread_command_split\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  split\
  split\
  split\
  split\
  split\
  split\
  split_com_arbitter\
  "

   set list_mods_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_msg_id "BD_TCL-008" "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set ddr4_sdram_c1 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddr4_rtl:1.0 ddr4_sdram_c1 ]
  set default_250mhz_clk1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 default_250mhz_clk1 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000} \
   ] $default_250mhz_clk1
  set pci_express_x4 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pci_express_x4 ]
  set pcie_refclk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 pcie_refclk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {100000000} \
   ] $pcie_refclk

  # Create ports
  set pcie_perstn [ create_bd_port -dir I -type rst pcie_perstn ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $pcie_perstn
  set reset_0 [ create_bd_port -dir I -type rst reset_0 ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $reset_0

  # Create instance: AXI_Lite_slave_plug_1, and set properties
  set AXI_Lite_slave_plug_1 [ create_bd_cell -type ip -vlnv user.org:user:AXI_Lite_slave_plug:1.0 AXI_Lite_slave_plug_1 ]

  # Create instance: addrmonitor_0, and set properties
  set block_name addrmonitor
  set block_cell_name addrmonitor_0
  if { [catch {set addrmonitor_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $addrmonitor_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_dma_0, and set properties
  set axi_dma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_0 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_0

  # Create instance: axi_dma_1, and set properties
  set axi_dma_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_1 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_1

  # Create instance: axi_dma_2, and set properties
  set axi_dma_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_2 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_2

  # Create instance: axi_dma_3, and set properties
  set axi_dma_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_3 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_3

  # Create instance: axi_dma_4, and set properties
  set axi_dma_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_4 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_4

  # Create instance: axi_dma_5, and set properties
  set axi_dma_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_5 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_5

  # Create instance: axi_dma_6, and set properties
  set axi_dma_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_6 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_6

  # Create instance: axi_dma_7, and set properties
  set axi_dma_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_7 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_7

  # Create instance: combile_0, and set properties
  set block_name combile
  set block_cell_name combile_0
  if { [catch {set combile_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $combile_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: combile_1, and set properties
  set block_name combile
  set block_cell_name combile_1
  if { [catch {set combile_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $combile_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: ddr4_0, and set properties
  set ddr4_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ddr4:2.2 ddr4_0 ]
  set_property -dict [ list \
   CONFIG.ADDN_UI_CLKOUT1_FREQ_HZ {250} \
   CONFIG.C0_CLOCK_BOARD_INTERFACE {default_250mhz_clk1} \
   CONFIG.C0_DDR4_BOARD_INTERFACE {ddr4_sdram_c1} \
   CONFIG.RESET_BOARD_INTERFACE {reset} \
 ] $ddr4_0

  # Create instance: dimm_scheduler_block_0, and set properties
  set block_name dimm_scheduler_blocking
  set block_cell_name dimm_scheduler_block_0
  if { [catch {set dimm_scheduler_block_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dimm_scheduler_block_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIMM_BASE_ADDR {0x90000000} \
   CONFIG.DIMM_ID {1} \
   CONFIG.DIMM_SIZE {0x30000000} \
 ] $dimm_scheduler_block_0

  # Create instance: dimm_scheduler_block_1, and set properties
  set block_name dimm_scheduler_blocking
  set block_cell_name dimm_scheduler_block_1
  if { [catch {set dimm_scheduler_block_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dimm_scheduler_block_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIMM_SIZE {0x40000000} \
 ] $dimm_scheduler_block_1

  # Create instance: gate_axi_0, and set properties
  set block_name gate_axi
  set block_cell_name gate_axi_0
  if { [catch {set gate_axi_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $gate_axi_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: ila_0, and set properties
  set ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_0 ]
  set_property -dict [ list \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {2} \
   CONFIG.C_PROBE0_WIDTH {8} \
   CONFIG.C_PROBE1_WIDTH {5} \
 ] $ila_0

  # Create instance: ila_1, and set properties
  set ila_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_1 ]
  set_property -dict [ list \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {2} \
   CONFIG.C_PROBE0_WIDTH {8} \
   CONFIG.C_PROBE1_WIDTH {5} \
   CONFIG.C_PROBE2_WIDTH {1} \
 ] $ila_1

  # Create instance: ila_2, and set properties
  set ila_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_2 ]

  # Create instance: ila_3, and set properties
  set ila_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_3 ]
  set_property -dict [ list \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {9} \
   CONFIG.C_PROBE1_WIDTH {20} \
   CONFIG.C_PROBE3_WIDTH {4} \
   CONFIG.C_PROBE6_WIDTH {32} \
   CONFIG.C_PROBE7_WIDTH {32} \
   CONFIG.C_PROBE8_WIDTH {8} \
 ] $ila_3

  # Create instance: multi_thread_command_0, and set properties
  set block_name multi_thread_command_split
  set block_cell_name multi_thread_command_0
  if { [catch {set multi_thread_command_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $multi_thread_command_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIMM0_END_ADDR {0xBFFFFFFF} \
   CONFIG.DIMM0_START_ADDR {0x80000000} \
   CONFIG.DIMM1_END_ADDR {0xC000000f} \
   CONFIG.DIMM1_START_ADDR {0xC0000000} \
 ] $multi_thread_command_0

  # Create instance: pmunit_multidimm_0, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_0
  if { [catch {set pmunit_multidimm_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_1, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_1
  if { [catch {set pmunit_multidimm_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_2, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_2
  if { [catch {set pmunit_multidimm_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_2 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_3, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_3
  if { [catch {set pmunit_multidimm_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_3 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_4, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_4
  if { [catch {set pmunit_multidimm_4 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_4 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_5, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_5
  if { [catch {set pmunit_multidimm_5 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_5 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_6, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_6
  if { [catch {set pmunit_multidimm_6 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_6 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_7, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_7
  if { [catch {set pmunit_multidimm_7 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_7 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]
  set_property -dict [ list \
   CONFIG.RESET_BOARD_INTERFACE {reset} \
   CONFIG.USE_BOARD_FLOW {true} \
 ] $proc_sys_reset_0

  # Create instance: proc_sys_reset_1, and set properties
  set proc_sys_reset_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_1 ]

  # Create instance: smartconnect_0, and set properties
  set smartconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 smartconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_CLKS {3} \
   CONFIG.NUM_MI {3} \
   CONFIG.NUM_SI {10} \
 ] $smartconnect_0

  # Create instance: smartconnect_1, and set properties
  set smartconnect_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 smartconnect_1 ]
  set_property -dict [ list \
   CONFIG.NUM_CLKS {2} \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {1} \
 ] $smartconnect_1

  # Create instance: smartconnect_2, and set properties
  set smartconnect_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 smartconnect_2 ]
  set_property -dict [ list \
   CONFIG.NUM_SI {8} \
 ] $smartconnect_2

  # Create instance: split_0, and set properties
  set block_name split
  set block_cell_name split_0
  if { [catch {set split_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_1, and set properties
  set block_name split
  set block_cell_name split_1
  if { [catch {set split_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_3, and set properties
  set block_name split
  set block_cell_name split_3
  if { [catch {set split_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_3 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_4, and set properties
  set block_name split
  set block_cell_name split_4
  if { [catch {set split_4 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_4 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_5, and set properties
  set block_name split
  set block_cell_name split_5
  if { [catch {set split_5 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_5 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_6, and set properties
  set block_name split
  set block_cell_name split_6
  if { [catch {set split_6 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_6 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_com_arbitter_0, and set properties
  set block_name split_com_arbitter
  set block_cell_name split_com_arbitter_0
  if { [catch {set split_com_arbitter_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_com_arbitter_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: util_ds_buf_0, and set properties
  set util_ds_buf_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_0 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDSGTE} \
   CONFIG.DIFF_CLK_IN_BOARD_INTERFACE {pcie_refclk} \
   CONFIG.USE_BOARD_FLOW {true} \
 ] $util_ds_buf_0

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_vector_logic_0

  # Create instance: xdma_0, and set properties
  set xdma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xdma:4.1 xdma_0 ]
  set_property -dict [ list \
   CONFIG.PCIE_BOARD_INTERFACE {pci_express_x4} \
   CONFIG.PF0_DEVICE_ID_mqdma {9024} \
   CONFIG.PF2_DEVICE_ID_mqdma {9024} \
   CONFIG.PF3_DEVICE_ID_mqdma {9024} \
   CONFIG.SYS_RST_N_BOARD_INTERFACE {pcie_perstn} \
   CONFIG.axi_addr_width {32} \
   CONFIG.axisten_freq {250} \
   CONFIG.bar_indicator {BAR_0} \
   CONFIG.en_axi_slave_if {false} \
   CONFIG.functional_mode {AXI_Bridge} \
   CONFIG.pciebar2axibar_0 {0x20000000} \
   CONFIG.pciebar2axibar_1 {0x44A00000} \
   CONFIG.pciebar2axibar_2 {0x80000000} \
   CONFIG.pf0_bar0_64bit {false} \
   CONFIG.pf0_bar0_prefetchable {false} \
   CONFIG.pf0_bar1_enabled {true} \
   CONFIG.pf0_bar1_scale {Kilobytes} \
   CONFIG.pf0_bar1_size {4} \
   CONFIG.pf0_bar2_64bit {true} \
   CONFIG.pf0_bar2_enabled {true} \
   CONFIG.pf0_bar2_prefetchable {true} \
   CONFIG.pf0_bar2_scale {Gigabytes} \
   CONFIG.pf0_bar2_size {1} \
   CONFIG.pf0_device_id {9024} \
   CONFIG.pf0_msix_cap_pba_bir {BAR_0} \
   CONFIG.pf0_msix_cap_table_bir {BAR_0} \
   CONFIG.pl_link_cap_max_link_speed {5.0_GT/s} \
   CONFIG.pl_link_cap_max_link_width {X4} \
   CONFIG.plltype {QPLL1} \
   CONFIG.xdma_axilite_slave {true} \
 ] $xdma_0

  # Create interface connections
  connect_bd_intf_net -intf_net axi_dma_0_M_AXIS_MM2S [get_bd_intf_pins axi_dma_0/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_0/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_MM2S [get_bd_intf_pins axi_dma_0/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S01_AXI]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_S2MM [get_bd_intf_pins axi_dma_0/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S02_AXI]
  connect_bd_intf_net -intf_net axi_dma_1_M_AXIS_MM2S [get_bd_intf_pins axi_dma_1/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_1/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_1_M_AXI_MM2S [get_bd_intf_pins axi_dma_1/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S03_AXI]
  connect_bd_intf_net -intf_net axi_dma_1_M_AXI_S2MM [get_bd_intf_pins axi_dma_1/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S04_AXI]
  connect_bd_intf_net -intf_net axi_dma_2_M_AXIS_MM2S [get_bd_intf_pins axi_dma_2/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_2/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_2_M_AXI_MM2S [get_bd_intf_pins axi_dma_2/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S07_AXI]
  connect_bd_intf_net -intf_net axi_dma_2_M_AXI_S2MM [get_bd_intf_pins axi_dma_2/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S08_AXI]
  connect_bd_intf_net -intf_net axi_dma_3_M_AXIS_MM2S [get_bd_intf_pins axi_dma_3/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_3/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_3_M_AXI_MM2S [get_bd_intf_pins axi_dma_3/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S05_AXI]
  connect_bd_intf_net -intf_net axi_dma_3_M_AXI_S2MM [get_bd_intf_pins axi_dma_3/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S06_AXI]
  connect_bd_intf_net -intf_net axi_dma_4_M_AXIS_MM2S [get_bd_intf_pins axi_dma_4/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_4/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_4_M_AXI_MM2S [get_bd_intf_pins axi_dma_4/M_AXI_MM2S] [get_bd_intf_pins smartconnect_2/S00_AXI]
  connect_bd_intf_net -intf_net axi_dma_4_M_AXI_S2MM [get_bd_intf_pins axi_dma_4/M_AXI_S2MM] [get_bd_intf_pins smartconnect_2/S01_AXI]
  connect_bd_intf_net -intf_net axi_dma_5_M_AXIS_MM2S [get_bd_intf_pins axi_dma_5/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_5/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_5_M_AXI_MM2S [get_bd_intf_pins axi_dma_5/M_AXI_MM2S] [get_bd_intf_pins smartconnect_2/S02_AXI]
  connect_bd_intf_net -intf_net axi_dma_5_M_AXI_S2MM [get_bd_intf_pins axi_dma_5/M_AXI_S2MM] [get_bd_intf_pins smartconnect_2/S03_AXI]
  connect_bd_intf_net -intf_net axi_dma_6_M_AXIS_MM2S [get_bd_intf_pins axi_dma_6/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_6/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_6_M_AXI_MM2S [get_bd_intf_pins axi_dma_6/M_AXI_MM2S] [get_bd_intf_pins smartconnect_2/S04_AXI]
  connect_bd_intf_net -intf_net axi_dma_6_M_AXI_S2MM [get_bd_intf_pins axi_dma_6/M_AXI_S2MM] [get_bd_intf_pins smartconnect_2/S05_AXI]
  connect_bd_intf_net -intf_net axi_dma_7_M_AXIS_MM2S [get_bd_intf_pins axi_dma_7/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_7/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_7_M_AXI_MM2S [get_bd_intf_pins axi_dma_7/M_AXI_MM2S] [get_bd_intf_pins smartconnect_2/S06_AXI]
  connect_bd_intf_net -intf_net axi_dma_7_M_AXI_S2MM [get_bd_intf_pins axi_dma_7/M_AXI_S2MM] [get_bd_intf_pins smartconnect_2/S07_AXI]
  connect_bd_intf_net -intf_net ddr4_0_C0_DDR4 [get_bd_intf_ports ddr4_sdram_c1] [get_bd_intf_pins ddr4_0/C0_DDR4]
  connect_bd_intf_net -intf_net default_250mhz_clk1_1 [get_bd_intf_ports default_250mhz_clk1] [get_bd_intf_pins ddr4_0/C0_SYS_CLK]
  connect_bd_intf_net -intf_net pcie_refclk_1 [get_bd_intf_ports pcie_refclk] [get_bd_intf_pins util_ds_buf_0/CLK_IN_D]
  connect_bd_intf_net -intf_net pmunit_multidimm_0_M_AXI [get_bd_intf_pins axi_dma_0/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_0/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_1_M_AXI [get_bd_intf_pins axi_dma_1/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_1/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_2_M_AXI [get_bd_intf_pins axi_dma_2/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_2/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_3_M_AXI [get_bd_intf_pins axi_dma_3/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_3/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_4_M_AXI [get_bd_intf_pins axi_dma_4/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_4/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_5_M_AXI [get_bd_intf_pins axi_dma_5/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_5/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_6_M_AXI [get_bd_intf_pins axi_dma_6/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_6/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_7_M_AXI [get_bd_intf_pins axi_dma_7/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_7/M_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M00_AXI [get_bd_intf_pins AXI_Lite_slave_plug_1/S00_AXI] [get_bd_intf_pins smartconnect_0/M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M01_AXI [get_bd_intf_pins ddr4_0/C0_DDR4_S_AXI] [get_bd_intf_pins smartconnect_0/M01_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M02_AXI [get_bd_intf_pins smartconnect_0/M02_AXI] [get_bd_intf_pins xdma_0/S_AXI_LITE]
  connect_bd_intf_net -intf_net smartconnect_1_M00_AXI [get_bd_intf_pins smartconnect_0/S00_AXI] [get_bd_intf_pins smartconnect_1/M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_1_M01_AXI [get_bd_intf_pins multi_thread_command_0/S_AXI] [get_bd_intf_pins smartconnect_1/M01_AXI]
connect_bd_intf_net -intf_net [get_bd_intf_nets smartconnect_1_M01_AXI] [get_bd_intf_pins ila_2/SLOT_0_AXI] [get_bd_intf_pins smartconnect_1/M01_AXI]
  connect_bd_intf_net -intf_net smartconnect_2_M00_AXI [get_bd_intf_pins smartconnect_0/S09_AXI] [get_bd_intf_pins smartconnect_2/M00_AXI]
  connect_bd_intf_net -intf_net xdma_0_M_AXI_B [get_bd_intf_pins smartconnect_1/S00_AXI] [get_bd_intf_pins xdma_0/M_AXI_B]
  connect_bd_intf_net -intf_net xdma_0_pcie_mgt [get_bd_intf_ports pci_express_x4] [get_bd_intf_pins xdma_0/pcie_mgt]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins dimm_scheduler_block_1/command_broadcast] [get_bd_pins pmunit_multidimm_0/COMMAND_BUS] [get_bd_pins pmunit_multidimm_1/COMMAND_BUS] [get_bd_pins pmunit_multidimm_2/COMMAND_BUS] [get_bd_pins pmunit_multidimm_3/COMMAND_BUS]
  connect_bd_net -net Net1 [get_bd_pins dimm_scheduler_block_1/current_log_addr] [get_bd_pins pmunit_multidimm_0/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_1/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_2/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_3/CURRENT_LOG_ADDR]
  connect_bd_net -net addrmonitor_0_m00_axi_awaddr [get_bd_pins addrmonitor_0/m00_axi_awaddr] [get_bd_pins smartconnect_1/S00_AXI_awaddr]
  connect_bd_net -net addrmonitor_0_m00_axi_awvalid [get_bd_pins addrmonitor_0/m00_axi_awvalid] [get_bd_pins smartconnect_1/S00_AXI_awvalid]
  connect_bd_net -net addrmonitor_0_m00_axi_wdata [get_bd_pins addrmonitor_0/m00_axi_wdata] [get_bd_pins smartconnect_1/S00_AXI_wdata]
  connect_bd_net -net addrmonitor_0_m00_axi_wvalid [get_bd_pins addrmonitor_0/m00_axi_wvalid] [get_bd_pins smartconnect_1/S00_AXI_wvalid]
  connect_bd_net -net addrmonitor_0_pmem_obj_offset [get_bd_pins addrmonitor_0/pmem_obj_offset] [get_bd_pins multi_thread_command_0/pmem_obj_offset]
  connect_bd_net -net addrmonitor_0_pmem_obj_offset_valid [get_bd_pins addrmonitor_0/pmem_obj_offset_valid] [get_bd_pins ila_3/probe2] [get_bd_pins multi_thread_command_0/pmem_obj_offset_valid]
  connect_bd_net -net combile_0_out [get_bd_pins combile_0/outp] [get_bd_pins dimm_scheduler_block_1/nearpmunit_done]
  connect_bd_net -net combile_1_outp [get_bd_pins combile_1/outp] [get_bd_pins dimm_scheduler_block_0/nearpmunit_done]
  connect_bd_net -net ddr4_0_addn_ui_clkout1 [get_bd_pins AXI_Lite_slave_plug_1/s00_axi_aclk] [get_bd_pins addrmonitor_0/clkmemops] [get_bd_pins axi_dma_0/m_axi_mm2s_aclk] [get_bd_pins axi_dma_0/m_axi_s2mm_aclk] [get_bd_pins axi_dma_0/s_axi_lite_aclk] [get_bd_pins axi_dma_1/m_axi_mm2s_aclk] [get_bd_pins axi_dma_1/m_axi_s2mm_aclk] [get_bd_pins axi_dma_1/s_axi_lite_aclk] [get_bd_pins axi_dma_2/m_axi_mm2s_aclk] [get_bd_pins axi_dma_2/m_axi_s2mm_aclk] [get_bd_pins axi_dma_2/s_axi_lite_aclk] [get_bd_pins axi_dma_3/m_axi_mm2s_aclk] [get_bd_pins axi_dma_3/m_axi_s2mm_aclk] [get_bd_pins axi_dma_3/s_axi_lite_aclk] [get_bd_pins axi_dma_4/m_axi_mm2s_aclk] [get_bd_pins axi_dma_4/m_axi_s2mm_aclk] [get_bd_pins axi_dma_4/s_axi_lite_aclk] [get_bd_pins axi_dma_5/m_axi_mm2s_aclk] [get_bd_pins axi_dma_5/m_axi_s2mm_aclk] [get_bd_pins axi_dma_5/s_axi_lite_aclk] [get_bd_pins axi_dma_6/m_axi_mm2s_aclk] [get_bd_pins axi_dma_6/m_axi_s2mm_aclk] [get_bd_pins axi_dma_6/s_axi_lite_aclk] [get_bd_pins axi_dma_7/m_axi_mm2s_aclk] [get_bd_pins axi_dma_7/m_axi_s2mm_aclk] [get_bd_pins axi_dma_7/s_axi_lite_aclk] [get_bd_pins ddr4_0/addn_ui_clkout1] [get_bd_pins dimm_scheduler_block_0/clk] [get_bd_pins dimm_scheduler_block_1/clk] [get_bd_pins gate_axi_0/clk_dest] [get_bd_pins ila_0/clk] [get_bd_pins ila_1/clk] [get_bd_pins ila_2/clk] [get_bd_pins ila_3/clk] [get_bd_pins multi_thread_command_0/S_AXI_ACLK] [get_bd_pins pmunit_multidimm_0/clk] [get_bd_pins pmunit_multidimm_1/clk] [get_bd_pins pmunit_multidimm_2/clk] [get_bd_pins pmunit_multidimm_3/clk] [get_bd_pins pmunit_multidimm_4/clk] [get_bd_pins pmunit_multidimm_5/clk] [get_bd_pins pmunit_multidimm_6/clk] [get_bd_pins pmunit_multidimm_7/clk] [get_bd_pins proc_sys_reset_0/slowest_sync_clk] [get_bd_pins smartconnect_0/aclk] [get_bd_pins smartconnect_1/aclk1] [get_bd_pins smartconnect_2/aclk] [get_bd_pins split_com_arbitter_0/clk]
  connect_bd_net -net ddr4_0_c0_ddr4_ui_clk [get_bd_pins ddr4_0/c0_ddr4_ui_clk] [get_bd_pins gate_axi_0/clk_src] [get_bd_pins proc_sys_reset_1/slowest_sync_clk] [get_bd_pins smartconnect_0/aclk2]
  connect_bd_net -net ddr4_0_c0_ddr4_ui_clk_sync_rst [get_bd_pins ddr4_0/c0_ddr4_ui_clk_sync_rst] [get_bd_pins proc_sys_reset_1/ext_reset_in]
  connect_bd_net -net dimm_scheduler_1_command_broadcast [get_bd_pins dimm_scheduler_block_0/command_broadcast] [get_bd_pins pmunit_multidimm_4/COMMAND_BUS] [get_bd_pins pmunit_multidimm_5/COMMAND_BUS] [get_bd_pins pmunit_multidimm_6/COMMAND_BUS] [get_bd_pins pmunit_multidimm_7/COMMAND_BUS]
  connect_bd_net -net dimm_scheduler_1_current_log_addr [get_bd_pins dimm_scheduler_block_0/current_log_addr] [get_bd_pins pmunit_multidimm_4/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_5/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_6/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_7/CURRENT_LOG_ADDR]
  connect_bd_net -net dimm_scheduler_block_0_command_broadcast_valid [get_bd_pins dimm_scheduler_block_0/command_broadcast_valid] [get_bd_pins split_3/inp]
  connect_bd_net -net dimm_scheduler_block_0_complete_split_out [get_bd_pins dimm_scheduler_block_0/complete_split_out] [get_bd_pins split_com_arbitter_0/complete_split_in1]
  connect_bd_net -net dimm_scheduler_block_0_nearpm_go_ahead [get_bd_pins dimm_scheduler_block_0/nearpm_go_ahead] [get_bd_pins split_5/inp]
  connect_bd_net -net dimm_scheduler_block_0_pending_complete_split_out [get_bd_pins dimm_scheduler_block_0/pending_complete_split_out] [get_bd_pins split_com_arbitter_0/pending_complete_split_in1]
  connect_bd_net -net dimm_scheduler_block_0_slall_mem_channel [get_bd_pins dimm_scheduler_block_0/slall_mem_channel] [get_bd_pins util_vector_logic_0/Op2]
  connect_bd_net -net dimm_scheduler_block_0_test_nearrPM_status [get_bd_pins dimm_scheduler_block_0/test_nearrPM_status] [get_bd_pins ila_1/probe0]
  connect_bd_net -net dimm_scheduler_block_0_test_scheduler_state [get_bd_pins dimm_scheduler_block_0/test_scheduler_state] [get_bd_pins ila_1/probe1]
  connect_bd_net -net dimm_scheduler_block_1_command_broadcast_valid [get_bd_pins dimm_scheduler_block_1/command_broadcast_valid] [get_bd_pins split_0/inp]
  connect_bd_net -net dimm_scheduler_block_1_complete_split_out [get_bd_pins dimm_scheduler_block_1/complete_split_out] [get_bd_pins split_com_arbitter_0/complete_split_in0]
  connect_bd_net -net dimm_scheduler_block_1_nearpm_go_ahead [get_bd_pins dimm_scheduler_block_1/nearpm_go_ahead] [get_bd_pins split_1/inp]
  connect_bd_net -net dimm_scheduler_block_1_pending_complete_split_out [get_bd_pins dimm_scheduler_block_1/pending_complete_split_out] [get_bd_pins split_com_arbitter_0/pending_complete_split_in0]
  connect_bd_net -net dimm_scheduler_block_1_slall_mem_channel [get_bd_pins dimm_scheduler_block_1/slall_mem_channel] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net dimm_scheduler_block_1_test_nearrPM_status [get_bd_pins dimm_scheduler_block_1/test_nearrPM_status] [get_bd_pins ila_0/probe0]
  connect_bd_net -net dimm_scheduler_block_1_test_scheduler_state [get_bd_pins dimm_scheduler_block_1/test_scheduler_state] [get_bd_pins ila_0/probe1]
  connect_bd_net -net gate_axi_0_arready_out [get_bd_pins gate_axi_0/arready_out] [get_bd_pins smartconnect_1/M00_AXI_arready]
  connect_bd_net -net gate_axi_0_arvalid_out [get_bd_pins gate_axi_0/arvalid_out] [get_bd_pins smartconnect_0/S00_AXI_arvalid]
  connect_bd_net -net gate_axi_0_awaddr_out [get_bd_pins gate_axi_0/awaddr_out] [get_bd_pins smartconnect_0/S00_AXI_awaddr]
  connect_bd_net -net gate_axi_0_awready_out [get_bd_pins gate_axi_0/awready_out] [get_bd_pins smartconnect_1/M00_AXI_awready]
  connect_bd_net -net gate_axi_0_awvalid_out [get_bd_pins gate_axi_0/awvalid_out] [get_bd_pins smartconnect_0/S00_AXI_awvalid]
  connect_bd_net -net gate_axi_0_bready_out [get_bd_pins gate_axi_0/bready_out] [get_bd_pins smartconnect_0/S00_AXI_bready]
  connect_bd_net -net gate_axi_0_bvalid_out [get_bd_pins gate_axi_0/bvalid_out] [get_bd_pins smartconnect_1/M00_AXI_bvalid]
  connect_bd_net -net gate_axi_0_rready_out [get_bd_pins gate_axi_0/rready_out] [get_bd_pins smartconnect_0/S00_AXI_rready]
  connect_bd_net -net gate_axi_0_rvalid_out [get_bd_pins gate_axi_0/rvalid_out] [get_bd_pins smartconnect_1/M00_AXI_rvalid]
  connect_bd_net -net gate_axi_0_wready_out [get_bd_pins gate_axi_0/wready_out] [get_bd_pins smartconnect_1/M00_AXI_wready]
  connect_bd_net -net gate_axi_0_wvalid_out [get_bd_pins gate_axi_0/wvalid_out] [get_bd_pins smartconnect_0/S00_AXI_wvalid]
  connect_bd_net -net multi_thread_command_0_command_broadcast [get_bd_pins dimm_scheduler_block_0/command_in] [get_bd_pins dimm_scheduler_block_1/command_in] [get_bd_pins multi_thread_command_0/command_broadcast]
  connect_bd_net -net multi_thread_command_0_command_broadcast_valid [get_bd_pins ila_3/probe8] [get_bd_pins multi_thread_command_0/command_broadcast_valid] [get_bd_pins split_6/inp]
  connect_bd_net -net multi_thread_command_0_oid_offset_lookup [get_bd_pins addrmonitor_0/OID_OFFSET_LOOKUP] [get_bd_pins ila_3/probe1] [get_bd_pins multi_thread_command_0/oid_offset_lookup]
  connect_bd_net -net multi_thread_command_0_oid_valid [get_bd_pins addrmonitor_0/OID_VALID] [get_bd_pins ila_3/probe0] [get_bd_pins multi_thread_command_0/oid_valid]
  connect_bd_net -net multi_thread_command_0_slall_mem_channel [get_bd_pins gate_axi_0/stall_channel] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net multi_thread_command_0_test_buffer0_select_valid [get_bd_pins ila_3/probe4] [get_bd_pins multi_thread_command_0/test_buffer0_select_valid]
  connect_bd_net -net multi_thread_command_0_test_buffer1_select_valid [get_bd_pins ila_3/probe5] [get_bd_pins multi_thread_command_0/test_buffer1_select_valid]
  connect_bd_net -net multi_thread_command_0_test_counter [get_bd_pins ila_3/probe7] [get_bd_pins multi_thread_command_0/test_counter]
  connect_bd_net -net multi_thread_command_0_test_fifo_buffer_full [get_bd_pins ila_3/probe6] [get_bd_pins multi_thread_command_0/test_fifo_buffer_full]
  connect_bd_net -net multi_thread_command_0_test_scheduler_state [get_bd_pins ila_3/probe3] [get_bd_pins multi_thread_command_0/test_scheduler_state]
  connect_bd_net -net pcie_perstn_1 [get_bd_ports pcie_perstn] [get_bd_pins xdma_0/sys_rst_n]
  connect_bd_net -net pmunit_multidimm_0_PMUNIT_STATE [get_bd_pins combile_0/in0] [get_bd_pins pmunit_multidimm_0/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_1_PMUNIT_STATE [get_bd_pins combile_0/in1] [get_bd_pins pmunit_multidimm_1/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_2_PMUNIT_STATE [get_bd_pins combile_0/in2] [get_bd_pins pmunit_multidimm_2/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_3_PMUNIT_STATE [get_bd_pins combile_0/in3] [get_bd_pins pmunit_multidimm_3/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_4_PMUNIT_STATE [get_bd_pins combile_1/in0] [get_bd_pins pmunit_multidimm_4/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_5_PMUNIT_STATE [get_bd_pins combile_1/in1] [get_bd_pins pmunit_multidimm_5/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_6_PMUNIT_STATE [get_bd_pins combile_1/in2] [get_bd_pins pmunit_multidimm_6/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_7_PMUNIT_STATE [get_bd_pins combile_1/in3] [get_bd_pins pmunit_multidimm_7/PMUNIT_STATE]
  connect_bd_net -net proc_sys_reset_1_peripheral_aresetn [get_bd_pins ddr4_0/c0_ddr4_aresetn] [get_bd_pins proc_sys_reset_1/peripheral_aresetn]
  connect_bd_net -net reset_0_1 [get_bd_ports reset_0] [get_bd_pins ddr4_0/sys_rst] [get_bd_pins proc_sys_reset_0/ext_reset_in]
  connect_bd_net -net reset_1 [get_bd_pins AXI_Lite_slave_plug_1/s00_axi_aresetn] [get_bd_pins axi_dma_0/axi_resetn] [get_bd_pins axi_dma_1/axi_resetn] [get_bd_pins axi_dma_2/axi_resetn] [get_bd_pins axi_dma_3/axi_resetn] [get_bd_pins axi_dma_4/axi_resetn] [get_bd_pins axi_dma_5/axi_resetn] [get_bd_pins axi_dma_6/axi_resetn] [get_bd_pins axi_dma_7/axi_resetn] [get_bd_pins dimm_scheduler_block_0/aresetn] [get_bd_pins dimm_scheduler_block_1/aresetn] [get_bd_pins gate_axi_0/aresetn] [get_bd_pins multi_thread_command_0/S_AXI_ARESETN] [get_bd_pins pmunit_multidimm_0/reset] [get_bd_pins pmunit_multidimm_1/reset] [get_bd_pins pmunit_multidimm_2/reset] [get_bd_pins pmunit_multidimm_3/reset] [get_bd_pins pmunit_multidimm_4/reset] [get_bd_pins pmunit_multidimm_5/reset] [get_bd_pins pmunit_multidimm_6/reset] [get_bd_pins pmunit_multidimm_7/reset] [get_bd_pins proc_sys_reset_0/peripheral_aresetn] [get_bd_pins smartconnect_0/aresetn] [get_bd_pins smartconnect_2/aresetn] [get_bd_pins split_com_arbitter_0/aresetn]
  connect_bd_net -net smartconnect_0_S00_AXI_arready [get_bd_pins gate_axi_0/arready_in] [get_bd_pins smartconnect_0/S00_AXI_arready]
  connect_bd_net -net smartconnect_0_S00_AXI_awready [get_bd_pins gate_axi_0/awready_in] [get_bd_pins smartconnect_0/S00_AXI_awready]
  connect_bd_net -net smartconnect_0_S00_AXI_bvalid [get_bd_pins gate_axi_0/bvalid_in] [get_bd_pins smartconnect_0/S00_AXI_bvalid]
  connect_bd_net -net smartconnect_0_S00_AXI_rvalid [get_bd_pins gate_axi_0/rvalid_in] [get_bd_pins smartconnect_0/S00_AXI_rvalid]
  connect_bd_net -net smartconnect_0_S00_AXI_wready [get_bd_pins gate_axi_0/wready_in] [get_bd_pins smartconnect_0/S00_AXI_wready]
  connect_bd_net -net smartconnect_1_M00_AXI_arvalid [get_bd_pins gate_axi_0/arvalid_in] [get_bd_pins smartconnect_1/M00_AXI_arvalid]
  connect_bd_net -net smartconnect_1_M00_AXI_awaddr [get_bd_pins gate_axi_0/awaddr_in] [get_bd_pins smartconnect_1/M00_AXI_awaddr]
  connect_bd_net -net smartconnect_1_M00_AXI_awvalid [get_bd_pins gate_axi_0/awvalid_in] [get_bd_pins smartconnect_1/M00_AXI_awvalid]
  connect_bd_net -net smartconnect_1_M00_AXI_bready [get_bd_pins gate_axi_0/bready_in] [get_bd_pins smartconnect_1/M00_AXI_bready]
  connect_bd_net -net smartconnect_1_M00_AXI_rready [get_bd_pins gate_axi_0/rready_in] [get_bd_pins smartconnect_1/M00_AXI_rready]
  connect_bd_net -net smartconnect_1_M00_AXI_wvalid [get_bd_pins gate_axi_0/wvalid_in] [get_bd_pins smartconnect_1/M00_AXI_wvalid]
  connect_bd_net -net split_0_out0 [get_bd_pins pmunit_multidimm_0/COMMAND_VALID] [get_bd_pins split_0/out0]
  connect_bd_net -net split_0_out1 [get_bd_pins pmunit_multidimm_1/COMMAND_VALID] [get_bd_pins split_0/out1]
  connect_bd_net -net split_0_out2 [get_bd_pins pmunit_multidimm_2/COMMAND_VALID] [get_bd_pins split_0/out2]
  connect_bd_net -net split_0_out3 [get_bd_pins pmunit_multidimm_3/COMMAND_VALID] [get_bd_pins split_0/out3]
  connect_bd_net -net split_1_out0 [get_bd_pins pmunit_multidimm_0/START_EXECUTION] [get_bd_pins split_1/out0]
  connect_bd_net -net split_1_out1 [get_bd_pins pmunit_multidimm_1/START_EXECUTION] [get_bd_pins split_1/out1]
  connect_bd_net -net split_1_out2 [get_bd_pins pmunit_multidimm_2/START_EXECUTION] [get_bd_pins split_1/out2]
  connect_bd_net -net split_1_out3 [get_bd_pins pmunit_multidimm_3/START_EXECUTION] [get_bd_pins split_1/out3]
  connect_bd_net -net split_3_out0 [get_bd_pins pmunit_multidimm_4/COMMAND_VALID] [get_bd_pins split_3/out0]
  connect_bd_net -net split_3_out1 [get_bd_pins pmunit_multidimm_5/COMMAND_VALID] [get_bd_pins split_3/out1]
  connect_bd_net -net split_3_out2 [get_bd_pins pmunit_multidimm_6/COMMAND_VALID] [get_bd_pins split_3/out2]
  connect_bd_net -net split_3_out3 [get_bd_pins pmunit_multidimm_7/COMMAND_VALID] [get_bd_pins split_3/out3]
  connect_bd_net -net split_4_out0 [get_bd_pins dimm_scheduler_block_1/complete_split_cmd_idx_valid_in] [get_bd_pins split_4/out0]
  connect_bd_net -net split_4_out1 [get_bd_pins dimm_scheduler_block_0/complete_split_cmd_idx_valid_in] [get_bd_pins split_4/out1]
  connect_bd_net -net split_5_out0 [get_bd_pins pmunit_multidimm_4/START_EXECUTION] [get_bd_pins split_5/out0]
  connect_bd_net -net split_5_out1 [get_bd_pins pmunit_multidimm_5/START_EXECUTION] [get_bd_pins split_5/out1]
  connect_bd_net -net split_5_out2 [get_bd_pins pmunit_multidimm_6/START_EXECUTION] [get_bd_pins split_5/out2]
  connect_bd_net -net split_5_out3 [get_bd_pins pmunit_multidimm_7/START_EXECUTION] [get_bd_pins split_5/out3]
  connect_bd_net -net split_6_out0 [get_bd_pins dimm_scheduler_block_1/command_valid] [get_bd_pins split_6/out0]
  connect_bd_net -net split_6_out1 [get_bd_pins dimm_scheduler_block_0/command_valid] [get_bd_pins split_6/out1]
  connect_bd_net -net split_com_arbitter_0_complete_split_cmd [get_bd_pins dimm_scheduler_block_0/complete_split_cmd_idx_in] [get_bd_pins dimm_scheduler_block_1/complete_split_cmd_idx_in] [get_bd_pins split_com_arbitter_0/complete_split_cmd]
  connect_bd_net -net split_com_arbitter_0_complete_split_cmd_valid [get_bd_pins split_4/inp] [get_bd_pins split_com_arbitter_0/complete_split_cmd_valid]
  connect_bd_net -net split_com_arbitter_0_read_complete_split0 [get_bd_pins dimm_scheduler_block_1/read_complete_split] [get_bd_pins split_com_arbitter_0/read_complete_split0]
  connect_bd_net -net split_com_arbitter_0_read_complete_split1 [get_bd_pins dimm_scheduler_block_0/read_complete_split] [get_bd_pins split_com_arbitter_0/read_complete_split1]
  connect_bd_net -net util_ds_buf_0_IBUF_DS_ODIV2 [get_bd_pins util_ds_buf_0/IBUF_DS_ODIV2] [get_bd_pins xdma_0/sys_clk]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT [get_bd_pins util_ds_buf_0/IBUF_OUT] [get_bd_pins xdma_0/sys_clk_gt]
  connect_bd_net -net xdma_0_axi_aclk [get_bd_pins addrmonitor_0/clk] [get_bd_pins smartconnect_0/aclk1] [get_bd_pins smartconnect_1/aclk] [get_bd_pins xdma_0/axi_aclk]
  connect_bd_net -net xdma_0_axi_aresetn [get_bd_pins addrmonitor_0/aresetn] [get_bd_pins smartconnect_1/aresetn] [get_bd_pins xdma_0/axi_aresetn]
  connect_bd_net -net xdma_0_m_axib_awaddr [get_bd_pins addrmonitor_0/s00_axi_awaddr] [get_bd_pins dimm_scheduler_block_0/awaddr] [get_bd_pins dimm_scheduler_block_1/awaddr] [get_bd_pins xdma_0/m_axib_awaddr]
  connect_bd_net -net xdma_0_m_axib_awvalid [get_bd_pins addrmonitor_0/s00_axi_awvalid] [get_bd_pins dimm_scheduler_block_0/awvalid] [get_bd_pins dimm_scheduler_block_1/awvalid] [get_bd_pins xdma_0/m_axib_awvalid]
  connect_bd_net -net xdma_0_m_axib_wdata [get_bd_pins addrmonitor_0/s00_axi_wdata] [get_bd_pins xdma_0/m_axib_wdata]
  connect_bd_net -net xdma_0_m_axib_wvalid [get_bd_pins addrmonitor_0/s00_axi_wvalid] [get_bd_pins xdma_0/m_axib_wvalid]

  # Create address segments
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_0/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_0/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_0/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_1/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_1/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_1/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_1/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_1/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_1/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_2/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_2/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_2/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_2/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_2/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_2/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_3/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_3/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_3/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_3/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_3/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_3/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_4/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_4/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_4/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_4/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_4/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_4/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_5/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_5/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_5/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_5/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_5/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_5/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_6/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_6/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_6/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_6/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_6/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_6/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_7/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00200000 -offset 0x44A00000 [get_bd_addr_spaces axi_dma_7/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_7/Data_MM2S] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_7/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_7/Data_MM2S] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_7/Data_S2MM] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_0/M_AXI] [get_bd_addr_segs axi_dma_0/S_AXI_LITE/Reg] SEG_axi_dma_0_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_1/M_AXI] [get_bd_addr_segs axi_dma_1/S_AXI_LITE/Reg] SEG_axi_dma_1_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_2/M_AXI] [get_bd_addr_segs axi_dma_2/S_AXI_LITE/Reg] SEG_axi_dma_2_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_3/M_AXI] [get_bd_addr_segs axi_dma_3/S_AXI_LITE/Reg] SEG_axi_dma_3_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_4/M_AXI] [get_bd_addr_segs axi_dma_4/S_AXI_LITE/Reg] SEG_axi_dma_4_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_5/M_AXI] [get_bd_addr_segs axi_dma_5/S_AXI_LITE/Reg] SEG_axi_dma_5_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_6/M_AXI] [get_bd_addr_segs axi_dma_6/S_AXI_LITE/Reg] SEG_axi_dma_6_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_7/M_AXI] [get_bd_addr_segs axi_dma_7/S_AXI_LITE/Reg] SEG_axi_dma_7_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x44A00000 [get_bd_addr_spaces xdma_0/M_AXI_B] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x80000000 -offset 0x80000000 [get_bd_addr_spaces xdma_0/M_AXI_B] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x00020000 -offset 0x20000000 [get_bd_addr_spaces xdma_0/M_AXI_B] [get_bd_addr_segs multi_thread_command_0/S_AXI/reg0] SEG_multi_thread_command_0_reg0
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces xdma_0/M_AXI_B] [get_bd_addr_segs xdma_0/S_AXI_LITE/CTL0] SEG_xdma_0_CTL0


  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_3()
cr_bd_design_3 ""
set_property EXCLUDE_DEBUG_LOGIC "0" [get_files design_3.bd ] 
set_property GENERATE_SYNTH_CHECKPOINT "1" [get_files design_3.bd ] 
set_property IS_ENABLED "1" [get_files design_3.bd ] 
set_property IS_GLOBAL_INCLUDE "0" [get_files design_3.bd ] 
set_property IS_LOCKED "0" [get_files design_3.bd ] 
set_property IS_MANAGED "0" [get_files design_3.bd ] 
set_property LIBRARY "xil_defaultlib" [get_files design_3.bd ] 
set_property PATH_MODE "RelativeFirst" [get_files design_3.bd ] 
set_property PFM_NAME "" [get_files design_3.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files design_3.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_3.bd ] 
set_property USED_IN "synthesis implementation simulation" [get_files design_3.bd ] 
set_property USED_IN_IMPLEMENTATION "1" [get_files design_3.bd ] 
set_property USED_IN_SIMULATION "1" [get_files design_3.bd ] 
set_property USED_IN_SYNTHESIS "1" [get_files design_3.bd ] 

if { [get_files addrmonitor.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/addrmonitor.v
}
if { [get_files axi_lite_master_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/axi_lite_master_driver.v
}
if { [get_files multi_thread_scheduler_v1_0_S00_AXI.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/multi_thread_scheduler_v1_0_S00_AXI.v
}
if { [get_files multi_thread_scheduler_v1_0.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/multi_thread_scheduler_v1_0.v
}
if { [get_files axi_lite_master_pcie.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/axi_lite_master_pcie.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller.v
}
if { [get_files pmunit.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files combile.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/combile.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller.v
}
if { [get_files pmunit.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller.v
}
if { [get_files pmunit.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller.v
}
if { [get_files pmunit.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# addrmonitor, axi_engine, axi_lite_master_pcie, combile, multi_thread_scheduler_v1_0, pmunit, pmunit, pmunit, pmunit, split, split, split



  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  user.org:user:AXI_Lite_slave_plug:1.0\
  xilinx.com:ip:axi_dma:7.1\
  xilinx.com:ip:smartconnect:1.0\
  xilinx.com:ip:xlconstant:1.1\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  addrmonitor\
  axi_engine\
  axi_lite_master_pcie\
  combile\
  multi_thread_scheduler_v1_0\
  pmunit\
  pmunit\
  pmunit\
  pmunit\
  split\
  split\
  split\
  "

   set list_mods_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_msg_id "BD_TCL-008" "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set clk [ create_bd_port -dir I -type clk clk ]
  set reset [ create_bd_port -dir I -type rst reset ]
  set start [ create_bd_port -dir I start ]

  # Create instance: AXI_Lite_slave_plug_0, and set properties
  set AXI_Lite_slave_plug_0 [ create_bd_cell -type ip -vlnv user.org:user:AXI_Lite_slave_plug:1.0 AXI_Lite_slave_plug_0 ]

  # Create instance: AXI_Lite_slave_plug_1, and set properties
  set AXI_Lite_slave_plug_1 [ create_bd_cell -type ip -vlnv user.org:user:AXI_Lite_slave_plug:1.0 AXI_Lite_slave_plug_1 ]

  # Create instance: AXI_Lite_slave_plug_2, and set properties
  set AXI_Lite_slave_plug_2 [ create_bd_cell -type ip -vlnv user.org:user:AXI_Lite_slave_plug:1.0 AXI_Lite_slave_plug_2 ]

  # Create instance: addrmonitor_0, and set properties
  set block_name addrmonitor
  set block_cell_name addrmonitor_0
  if { [catch {set addrmonitor_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $addrmonitor_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_dma_0, and set properties
  set axi_dma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_0 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_0

  # Create instance: axi_dma_1, and set properties
  set axi_dma_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_1 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_1

  # Create instance: axi_dma_2, and set properties
  set axi_dma_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_2 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_2

  # Create instance: axi_dma_3, and set properties
  set axi_dma_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_3 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_3

  # Create instance: axi_engine_0, and set properties
  set block_name axi_engine
  set block_cell_name axi_engine_0
  if { [catch {set axi_engine_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_engine_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_lite_master_pcie_0, and set properties
  set block_name axi_lite_master_pcie
  set block_cell_name axi_lite_master_pcie_0
  if { [catch {set axi_lite_master_pcie_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_lite_master_pcie_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: combile_0, and set properties
  set block_name combile
  set block_cell_name combile_0
  if { [catch {set combile_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $combile_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: multi_thread_schedul_0, and set properties
  set block_name multi_thread_scheduler_v1_0
  set block_cell_name multi_thread_schedul_0
  if { [catch {set multi_thread_schedul_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $multi_thread_schedul_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_0, and set properties
  set block_name pmunit
  set block_cell_name pmunit_0
  if { [catch {set pmunit_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_1, and set properties
  set block_name pmunit
  set block_cell_name pmunit_1
  if { [catch {set pmunit_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_2, and set properties
  set block_name pmunit
  set block_cell_name pmunit_2
  if { [catch {set pmunit_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_2 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_3, and set properties
  set block_name pmunit
  set block_cell_name pmunit_3
  if { [catch {set pmunit_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_3 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: smartconnect_0, and set properties
  set smartconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 smartconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {8} \
 ] $smartconnect_0

  # Create instance: split_0, and set properties
  set block_name split
  set block_cell_name split_0
  if { [catch {set split_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_1, and set properties
  set block_name split
  set block_cell_name split_1
  if { [catch {set split_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_2, and set properties
  set block_name split
  set block_cell_name split_2
  if { [catch {set split_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_2 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net axi_dma_0_M_AXIS_MM2S [get_bd_intf_pins axi_dma_0/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_0/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_MM2S [get_bd_intf_pins axi_dma_0/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_S2MM [get_bd_intf_pins axi_dma_0/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S01_AXI]
  connect_bd_intf_net -intf_net axi_dma_1_M_AXIS_MM2S [get_bd_intf_pins axi_dma_1/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_1/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_1_M_AXI_MM2S [get_bd_intf_pins axi_dma_1/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S02_AXI]
  connect_bd_intf_net -intf_net axi_dma_1_M_AXI_S2MM [get_bd_intf_pins axi_dma_1/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S03_AXI]
  connect_bd_intf_net -intf_net axi_dma_2_M_AXIS_MM2S [get_bd_intf_pins axi_dma_2/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_2/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_2_M_AXI_MM2S [get_bd_intf_pins axi_dma_2/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S04_AXI]
  connect_bd_intf_net -intf_net axi_dma_2_M_AXI_S2MM [get_bd_intf_pins axi_dma_2/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S05_AXI]
  connect_bd_intf_net -intf_net axi_dma_3_M_AXIS_MM2S [get_bd_intf_pins axi_dma_3/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_3/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_3_M_AXI_MM2S [get_bd_intf_pins axi_dma_3/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S06_AXI]
  connect_bd_intf_net -intf_net axi_dma_3_M_AXI_S2MM [get_bd_intf_pins axi_dma_3/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S07_AXI]
  connect_bd_intf_net -intf_net axi_engine_0_M_AXI [get_bd_intf_pins axi_engine_0/M_AXI] [get_bd_intf_pins multi_thread_schedul_0/s00_axi]
  connect_bd_intf_net -intf_net axi_lite_master_pcie_0_M_AXI [get_bd_intf_pins AXI_Lite_slave_plug_0/S00_AXI] [get_bd_intf_pins axi_lite_master_pcie_0/M_AXI]
  connect_bd_intf_net -intf_net pmunit_0_M_AXI [get_bd_intf_pins axi_dma_0/S_AXI_LITE] [get_bd_intf_pins pmunit_0/M_AXI]
  connect_bd_intf_net -intf_net pmunit_1_M_AXI [get_bd_intf_pins axi_dma_1/S_AXI_LITE] [get_bd_intf_pins pmunit_1/M_AXI]
  connect_bd_intf_net -intf_net pmunit_2_M_AXI [get_bd_intf_pins axi_dma_2/S_AXI_LITE] [get_bd_intf_pins pmunit_2/M_AXI]
  connect_bd_intf_net -intf_net pmunit_3_M_AXI [get_bd_intf_pins axi_dma_3/S_AXI_LITE] [get_bd_intf_pins pmunit_3/M_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M00_AXI [get_bd_intf_pins AXI_Lite_slave_plug_1/S00_AXI] [get_bd_intf_pins smartconnect_0/M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M01_AXI [get_bd_intf_pins AXI_Lite_slave_plug_2/S00_AXI] [get_bd_intf_pins smartconnect_0/M01_AXI]

  # Create port connections
  connect_bd_net -net addrmonitor_0_m00_axi_awaddr [get_bd_pins AXI_Lite_slave_plug_0/s00_axi_awaddr] [get_bd_pins addrmonitor_0/m00_axi_awaddr]
  connect_bd_net -net addrmonitor_0_m00_axi_awvalid [get_bd_pins AXI_Lite_slave_plug_0/s00_axi_awvalid] [get_bd_pins addrmonitor_0/m00_axi_awvalid]
  connect_bd_net -net addrmonitor_0_m00_axi_wdata [get_bd_pins AXI_Lite_slave_plug_0/s00_axi_wdata] [get_bd_pins addrmonitor_0/m00_axi_wdata]
  connect_bd_net -net addrmonitor_0_m00_axi_wvalid [get_bd_pins AXI_Lite_slave_plug_0/s00_axi_wvalid] [get_bd_pins addrmonitor_0/m00_axi_wvalid]
  connect_bd_net -net addrmonitor_0_offset_valid_nearpmunit [get_bd_pins addrmonitor_0/offset_valid_nearpmunit] [get_bd_pins split_2/inp]
  connect_bd_net -net addrmonitor_0_pmem_obj_offset [get_bd_pins addrmonitor_0/pmem_obj_offset] [get_bd_pins multi_thread_schedul_0/PMEM_OBJ_OFFSET] [get_bd_pins pmunit_0/ADDR_OFFSET] [get_bd_pins pmunit_1/ADDR_OFFSET] [get_bd_pins pmunit_2/ADDR_OFFSET] [get_bd_pins pmunit_3/ADDR_OFFSET]
  connect_bd_net -net addrmonitor_0_pmem_obj_offset_valid [get_bd_pins addrmonitor_0/pmem_obj_offset_valid] [get_bd_pins multi_thread_schedul_0/PMEM_OBJ_OFFSET_VALID]
  connect_bd_net -net axi_lite_master_pcie_0_M_AXI_AWADDR [get_bd_pins addrmonitor_0/s00_axi_awaddr] [get_bd_pins axi_lite_master_pcie_0/M_AXI_AWADDR]
  connect_bd_net -net axi_lite_master_pcie_0_M_AXI_AWVALID [get_bd_pins addrmonitor_0/s00_axi_awvalid] [get_bd_pins axi_lite_master_pcie_0/M_AXI_AWVALID]
  connect_bd_net -net axi_lite_master_pcie_0_M_AXI_WDATA [get_bd_pins addrmonitor_0/s00_axi_wdata] [get_bd_pins axi_lite_master_pcie_0/M_AXI_WDATA]
  connect_bd_net -net axi_lite_master_pcie_0_M_AXI_WVALID [get_bd_pins addrmonitor_0/s00_axi_wvalid] [get_bd_pins axi_lite_master_pcie_0/M_AXI_WVALID]
  connect_bd_net -net clk_1 [get_bd_ports clk] [get_bd_pins AXI_Lite_slave_plug_0/s00_axi_aclk] [get_bd_pins AXI_Lite_slave_plug_1/s00_axi_aclk] [get_bd_pins AXI_Lite_slave_plug_2/s00_axi_aclk] [get_bd_pins addrmonitor_0/clk] [get_bd_pins addrmonitor_0/clkmemops] [get_bd_pins axi_dma_0/m_axi_mm2s_aclk] [get_bd_pins axi_dma_0/m_axi_s2mm_aclk] [get_bd_pins axi_dma_0/s_axi_lite_aclk] [get_bd_pins axi_dma_1/m_axi_mm2s_aclk] [get_bd_pins axi_dma_1/m_axi_s2mm_aclk] [get_bd_pins axi_dma_1/s_axi_lite_aclk] [get_bd_pins axi_dma_2/m_axi_mm2s_aclk] [get_bd_pins axi_dma_2/m_axi_s2mm_aclk] [get_bd_pins axi_dma_2/s_axi_lite_aclk] [get_bd_pins axi_dma_3/m_axi_mm2s_aclk] [get_bd_pins axi_dma_3/m_axi_s2mm_aclk] [get_bd_pins axi_dma_3/s_axi_lite_aclk] [get_bd_pins axi_engine_0/M_AXI_ACLK] [get_bd_pins axi_lite_master_pcie_0/M_AXI_ACLK] [get_bd_pins multi_thread_schedul_0/s00_axi_aclk] [get_bd_pins pmunit_0/clk] [get_bd_pins pmunit_1/clk] [get_bd_pins pmunit_2/clk] [get_bd_pins pmunit_3/clk] [get_bd_pins smartconnect_0/aclk]
  connect_bd_net -net combile_0_out [get_bd_pins combile_0/outp] [get_bd_pins multi_thread_schedul_0/NEARPMUNIT_DONE]
  connect_bd_net -net multi_thread_schedul_0_COMMAND_BROADCAST [get_bd_pins multi_thread_schedul_0/COMMAND_BROADCAST] [get_bd_pins pmunit_0/COMMAND_BUS] [get_bd_pins pmunit_1/COMMAND_BUS] [get_bd_pins pmunit_2/COMMAND_BUS] [get_bd_pins pmunit_3/COMMAND_BUS]
  connect_bd_net -net multi_thread_schedul_0_COMMAND_BROADCAST_VALID [get_bd_pins multi_thread_schedul_0/COMMAND_BROADCAST_VALID] [get_bd_pins split_0/inp]
  connect_bd_net -net multi_thread_schedul_0_CURRENT_LOG_ADDR [get_bd_pins multi_thread_schedul_0/CURRENT_LOG_ADDR] [get_bd_pins pmunit_0/CURRENT_LOG_ADDR] [get_bd_pins pmunit_1/CURRENT_LOG_ADDR] [get_bd_pins pmunit_2/CURRENT_LOG_ADDR] [get_bd_pins pmunit_3/CURRENT_LOG_ADDR]
  connect_bd_net -net multi_thread_schedul_0_NEARPM_STATRT [get_bd_pins multi_thread_schedul_0/NEARPM_STATRT] [get_bd_pins split_1/inp]
  connect_bd_net -net multi_thread_schedul_0_OID_OFFSET_LOOKUP [get_bd_pins addrmonitor_0/OID_OFFSET_LOOKUP] [get_bd_pins multi_thread_schedul_0/OID_OFFSET_LOOKUP]
  connect_bd_net -net multi_thread_schedul_0_OID_VALID [get_bd_pins addrmonitor_0/OID_VALID] [get_bd_pins multi_thread_schedul_0/OID_VALID]
  connect_bd_net -net pmunit_0_PMUNIT_STATE [get_bd_pins combile_0/in0] [get_bd_pins pmunit_0/PMUNIT_STATE]
  connect_bd_net -net pmunit_1_PMUNIT_STATE [get_bd_pins combile_0/in1] [get_bd_pins pmunit_1/PMUNIT_STATE]
  connect_bd_net -net pmunit_2_PMUNIT_STATE [get_bd_pins combile_0/in2] [get_bd_pins pmunit_2/PMUNIT_STATE]
  connect_bd_net -net pmunit_3_PMUNIT_STATE [get_bd_pins combile_0/in3] [get_bd_pins pmunit_3/PMUNIT_STATE]
  connect_bd_net -net reset_1 [get_bd_ports reset] [get_bd_pins AXI_Lite_slave_plug_0/s00_axi_aresetn] [get_bd_pins AXI_Lite_slave_plug_1/s00_axi_aresetn] [get_bd_pins AXI_Lite_slave_plug_2/s00_axi_aresetn] [get_bd_pins addrmonitor_0/aresetn] [get_bd_pins axi_dma_0/axi_resetn] [get_bd_pins axi_dma_1/axi_resetn] [get_bd_pins axi_dma_2/axi_resetn] [get_bd_pins axi_dma_3/axi_resetn] [get_bd_pins axi_engine_0/M_AXI_ARESETN] [get_bd_pins axi_lite_master_pcie_0/M_AXI_ARESETN] [get_bd_pins multi_thread_schedul_0/s00_axi_aresetn] [get_bd_pins pmunit_0/reset] [get_bd_pins pmunit_1/reset] [get_bd_pins pmunit_2/reset] [get_bd_pins pmunit_3/reset] [get_bd_pins smartconnect_0/aresetn]
  connect_bd_net -net split_0_out0 [get_bd_pins pmunit_0/COMMAND_VALID] [get_bd_pins split_0/out0]
  connect_bd_net -net split_0_out1 [get_bd_pins pmunit_1/COMMAND_VALID] [get_bd_pins split_0/out1]
  connect_bd_net -net split_0_out2 [get_bd_pins pmunit_2/COMMAND_VALID] [get_bd_pins split_0/out2]
  connect_bd_net -net split_0_out3 [get_bd_pins pmunit_3/COMMAND_VALID] [get_bd_pins split_0/out3]
  connect_bd_net -net split_1_out0 [get_bd_pins pmunit_0/START_EXECUTION] [get_bd_pins split_1/out0]
  connect_bd_net -net split_1_out1 [get_bd_pins pmunit_1/START_EXECUTION] [get_bd_pins split_1/out1]
  connect_bd_net -net split_1_out2 [get_bd_pins pmunit_2/START_EXECUTION] [get_bd_pins split_1/out2]
  connect_bd_net -net split_1_out3 [get_bd_pins pmunit_3/START_EXECUTION] [get_bd_pins split_1/out3]
  connect_bd_net -net split_2_out0 [get_bd_pins pmunit_0/ADDR_OFFSET_VALID] [get_bd_pins split_2/out0]
  connect_bd_net -net split_2_out1 [get_bd_pins pmunit_1/ADDR_OFFSET_VALID] [get_bd_pins split_2/out1]
  connect_bd_net -net split_2_out2 [get_bd_pins pmunit_2/ADDR_OFFSET_VALID] [get_bd_pins split_2/out2]
  connect_bd_net -net split_2_out3 [get_bd_pins pmunit_3/ADDR_OFFSET_VALID] [get_bd_pins split_2/out3]
  connect_bd_net -net start_1 [get_bd_ports start] [get_bd_pins axi_engine_0/DMA_START] [get_bd_pins axi_lite_master_pcie_0/DMA_START]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins axi_engine_0/DMA_SRC] [get_bd_pins xlconstant_0/dout]

  # Create address segments
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_0/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_0/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_1/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_1/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_1/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_1/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_2/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_2/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_2/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_2/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_3/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_3/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_3/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_3/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x000100000000 -offset 0x00000000 [get_bd_addr_spaces axi_engine_0/M_AXI] [get_bd_addr_segs multi_thread_schedul_0/s00_axi/reg0] SEG_multi_thread_schedul_0_reg0
  create_bd_addr_seg -range 0x00010000 -offset 0x44A00000 [get_bd_addr_spaces axi_lite_master_pcie_0/M_AXI] [get_bd_addr_segs AXI_Lite_slave_plug_0/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_0_S00_AXI_reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_0/M_AXI] [get_bd_addr_segs axi_dma_0/S_AXI_LITE/Reg] SEG_axi_dma_0_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_1/M_AXI] [get_bd_addr_segs axi_dma_1/S_AXI_LITE/Reg] SEG_axi_dma_1_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_2/M_AXI] [get_bd_addr_segs axi_dma_2/S_AXI_LITE/Reg] SEG_axi_dma_2_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_3/M_AXI] [get_bd_addr_segs axi_dma_3/S_AXI_LITE/Reg] SEG_axi_dma_3_Reg


  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_msg_id "BD_TCL-1000" "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property EXCLUDE_DEBUG_LOGIC "0" [get_files design_1.bd ] 
set_property GENERATE_SYNTH_CHECKPOINT "1" [get_files design_1.bd ] 
set_property IS_ENABLED "1" [get_files design_1.bd ] 
set_property IS_GLOBAL_INCLUDE "0" [get_files design_1.bd ] 
set_property IS_LOCKED "0" [get_files design_1.bd ] 
set_property IS_MANAGED "0" [get_files design_1.bd ] 
set_property LIBRARY "xil_defaultlib" [get_files design_1.bd ] 
set_property PATH_MODE "RelativeFirst" [get_files design_1.bd ] 
set_property PFM_NAME "" [get_files design_1.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 
set_property USED_IN "synthesis implementation simulation" [get_files design_1.bd ] 
set_property USED_IN_IMPLEMENTATION "1" [get_files design_1.bd ] 
set_property USED_IN_SIMULATION "1" [get_files design_1.bd ] 
set_property USED_IN_SYNTHESIS "1" [get_files design_1.bd ] 

if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}


# Proc to create BD design_2
proc cr_bd_design_2 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# dma_driver



  # CHANGE DESIGN NAME HERE
  set design_name design_2

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  user.org:user:AXI_Lite_slave_plug:1.0\
  xilinx.com:ip:axi_dma:7.1\
  xilinx.com:ip:smartconnect:1.0\
  xilinx.com:ip:xlconstant:1.1\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  dma_driver\
  "

   set list_mods_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_msg_id "BD_TCL-008" "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set areset [ create_bd_port -dir I -type rst areset ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $areset
  set clk [ create_bd_port -dir I -type clk clk ]
  set start [ create_bd_port -dir I start ]

  # Create instance: AXI_Lite_slave_plug_0, and set properties
  set AXI_Lite_slave_plug_0 [ create_bd_cell -type ip -vlnv user.org:user:AXI_Lite_slave_plug:1.0 AXI_Lite_slave_plug_0 ]

  # Create instance: AXI_Lite_slave_plug_1, and set properties
  set AXI_Lite_slave_plug_1 [ create_bd_cell -type ip -vlnv user.org:user:AXI_Lite_slave_plug:1.0 AXI_Lite_slave_plug_1 ]

  # Create instance: axi_dma_0, and set properties
  set axi_dma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_0 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_0

  # Create instance: dma_driver_0, and set properties
  set block_name dma_driver
  set block_cell_name dma_driver_0
  if { [catch {set dma_driver_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dma_driver_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: smartconnect_0, and set properties
  set smartconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 smartconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {2} \
 ] $smartconnect_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0x40000000} \
   CONFIG.CONST_WIDTH {32} \
 ] $xlconstant_0

  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0xC0000000} \
   CONFIG.CONST_WIDTH {32} \
 ] $xlconstant_1

  # Create instance: xlconstant_2, and set properties
  set xlconstant_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_2 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0x00000016} \
   CONFIG.CONST_WIDTH {32} \
 ] $xlconstant_2

  # Create interface connections
  connect_bd_intf_net -intf_net axi_dma_0_M_AXIS_MM2S [get_bd_intf_pins axi_dma_0/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_0/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_MM2S [get_bd_intf_pins axi_dma_0/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_S2MM [get_bd_intf_pins axi_dma_0/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S01_AXI]
  connect_bd_intf_net -intf_net dma_driver_0_M_AXI [get_bd_intf_pins axi_dma_0/S_AXI_LITE] [get_bd_intf_pins dma_driver_0/M_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M00_AXI [get_bd_intf_pins AXI_Lite_slave_plug_0/S00_AXI] [get_bd_intf_pins smartconnect_0/M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M01_AXI [get_bd_intf_pins AXI_Lite_slave_plug_1/S00_AXI] [get_bd_intf_pins smartconnect_0/M01_AXI]

  # Create port connections
  connect_bd_net -net areset_1 [get_bd_ports areset] [get_bd_pins AXI_Lite_slave_plug_0/s00_axi_aresetn] [get_bd_pins AXI_Lite_slave_plug_1/s00_axi_aresetn] [get_bd_pins axi_dma_0/axi_resetn] [get_bd_pins dma_driver_0/M_AXI_ARESETN] [get_bd_pins smartconnect_0/aresetn]
  connect_bd_net -net clk_1 [get_bd_ports clk] [get_bd_pins AXI_Lite_slave_plug_0/s00_axi_aclk] [get_bd_pins AXI_Lite_slave_plug_1/s00_axi_aclk] [get_bd_pins axi_dma_0/m_axi_mm2s_aclk] [get_bd_pins axi_dma_0/m_axi_s2mm_aclk] [get_bd_pins axi_dma_0/s_axi_lite_aclk] [get_bd_pins dma_driver_0/M_AXI_ACLK] [get_bd_pins smartconnect_0/aclk]
  connect_bd_net -net start_1 [get_bd_ports start] [get_bd_pins dma_driver_0/DMA_START]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins dma_driver_0/DMA_SRC] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins dma_driver_0/DMA_DEST] [get_bd_pins xlconstant_1/dout]
  connect_bd_net -net xlconstant_2_dout [get_bd_pins dma_driver_0/DMA_LEN] [get_bd_pins xlconstant_2/dout]

  # Create address segments
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_0/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_0/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_0_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_0/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_0_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_0/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces dma_driver_0/M_AXI] [get_bd_addr_segs axi_dma_0/S_AXI_LITE/Reg] SEG_axi_dma_0_Reg


  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_2()
cr_bd_design_2 ""
set_property EXCLUDE_DEBUG_LOGIC "0" [get_files design_2.bd ] 
set_property GENERATE_SYNTH_CHECKPOINT "1" [get_files design_2.bd ] 
set_property IS_ENABLED "1" [get_files design_2.bd ] 
set_property IS_GLOBAL_INCLUDE "0" [get_files design_2.bd ] 
set_property IS_LOCKED "0" [get_files design_2.bd ] 
set_property IS_MANAGED "0" [get_files design_2.bd ] 
set_property LIBRARY "xil_defaultlib" [get_files design_2.bd ] 
set_property PATH_MODE "RelativeFirst" [get_files design_2.bd ] 
set_property PFM_NAME "" [get_files design_2.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files design_2.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_2.bd ] 
set_property USED_IN "synthesis implementation simulation" [get_files design_2.bd ] 
set_property USED_IN_IMPLEMENTATION "1" [get_files design_2.bd ] 
set_property USED_IN_SIMULATION "1" [get_files design_2.bd ] 
set_property USED_IN_SYNTHESIS "1" [get_files design_2.bd ] 

if { [get_files addrmonitor.v] == "" } {
  import_files -quiet -fileset sources_1 mnt/AA50F1DA50F1ADsrc/hw/addrmonitor.v
}
if { [get_files axi_lite_master_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/axi_lite_master_driver.v
}
if { [get_files axi_lite_master_pcie.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/axi_lite_master_pcie.v
}
if { [get_files combile.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/combile.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files multi_thread_command_split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/multi_thread_command_split.v
}
if { [get_files dimm_scheduler.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dimm_scheduler.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files combile.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/combile.v
}
if { [get_files dimm_scheduler.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dimm_scheduler.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files dma_driver.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/dma_driver.v
}
if { [get_files pmunit_controller_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_controller_multidimm.v
}
if { [get_files pmunit_multidimm.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/pmunit_multidimm.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}
if { [get_files split_com_arbitter.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split_com_arbitter.v
}
if { [get_files split.v] == "" } {
  import_files -quiet -fileset sources_1 src/hw/split.v
}


# Proc to create BD design_4
proc cr_bd_design_4 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# addrmonitor, axi_engine, axi_lite_master_pcie, combile, combile, dimm_scheduler, dimm_scheduler, multi_thread_command_split, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, pmunit_multidimm, split, split, split, split, split, split, split_com_arbitter



  # CHANGE DESIGN NAME HERE
  set design_name design_4

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  user.org:user:AXI_Lite_slave_plug:1.0\
  xilinx.com:ip:axi_dma:7.1\
  xilinx.com:ip:smartconnect:1.0\
  xilinx.com:ip:xlconstant:1.1\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  addrmonitor\
  axi_engine\
  axi_lite_master_pcie\
  combile\
  combile\
  dimm_scheduler\
  dimm_scheduler\
  multi_thread_command_split\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  pmunit_multidimm\
  split\
  split\
  split\
  split\
  split\
  split\
  split_com_arbitter\
  "

   set list_mods_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_msg_id "BD_TCL-008" "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set clk [ create_bd_port -dir I -type clk clk ]
  set reset [ create_bd_port -dir I -type rst reset ]
  set start [ create_bd_port -dir I start ]

  # Create instance: AXI_Lite_slave_plug_0, and set properties
  set AXI_Lite_slave_plug_0 [ create_bd_cell -type ip -vlnv user.org:user:AXI_Lite_slave_plug:1.0 AXI_Lite_slave_plug_0 ]

  # Create instance: AXI_Lite_slave_plug_1, and set properties
  set AXI_Lite_slave_plug_1 [ create_bd_cell -type ip -vlnv user.org:user:AXI_Lite_slave_plug:1.0 AXI_Lite_slave_plug_1 ]

  # Create instance: AXI_Lite_slave_plug_2, and set properties
  set AXI_Lite_slave_plug_2 [ create_bd_cell -type ip -vlnv user.org:user:AXI_Lite_slave_plug:1.0 AXI_Lite_slave_plug_2 ]

  # Create instance: addrmonitor_0, and set properties
  set block_name addrmonitor
  set block_cell_name addrmonitor_0
  if { [catch {set addrmonitor_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $addrmonitor_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_dma_0, and set properties
  set axi_dma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_0 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_0

  # Create instance: axi_dma_1, and set properties
  set axi_dma_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_1 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_1

  # Create instance: axi_dma_2, and set properties
  set axi_dma_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_2 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_2

  # Create instance: axi_dma_3, and set properties
  set axi_dma_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_3 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_3

  # Create instance: axi_dma_4, and set properties
  set axi_dma_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_4 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_4

  # Create instance: axi_dma_5, and set properties
  set axi_dma_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_5 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_5

  # Create instance: axi_dma_6, and set properties
  set axi_dma_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_6 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_6

  # Create instance: axi_dma_7, and set properties
  set axi_dma_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_7 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $axi_dma_7

  # Create instance: axi_engine_0, and set properties
  set block_name axi_engine
  set block_cell_name axi_engine_0
  if { [catch {set axi_engine_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_engine_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_lite_master_pcie_0, and set properties
  set block_name axi_lite_master_pcie
  set block_cell_name axi_lite_master_pcie_0
  if { [catch {set axi_lite_master_pcie_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_lite_master_pcie_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: combile_0, and set properties
  set block_name combile
  set block_cell_name combile_0
  if { [catch {set combile_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $combile_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: combile_1, and set properties
  set block_name combile
  set block_cell_name combile_1
  if { [catch {set combile_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $combile_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: dimm_scheduler_0, and set properties
  set block_name dimm_scheduler
  set block_cell_name dimm_scheduler_0
  if { [catch {set dimm_scheduler_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dimm_scheduler_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIMM_BASE_ADDR {0x40000000} \
 ] $dimm_scheduler_0

  # Create instance: dimm_scheduler_1, and set properties
  set block_name dimm_scheduler
  set block_cell_name dimm_scheduler_1
  if { [catch {set dimm_scheduler_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dimm_scheduler_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIMM_BASE_ADDR {0x60000000} \
   CONFIG.DIMM_ID {1} \
 ] $dimm_scheduler_1

  # Create instance: multi_thread_command_0, and set properties
  set block_name multi_thread_command_split
  set block_cell_name multi_thread_command_0
  if { [catch {set multi_thread_command_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $multi_thread_command_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIMM0_END_ADDR {0x5FFFFFFF} \
   CONFIG.DIMM0_START_ADDR {0x40000000} \
   CONFIG.DIMM1_END_ADDR {0x7FFFFFFF} \
   CONFIG.DIMM1_START_ADDR {0x60000000} \
 ] $multi_thread_command_0

  # Create instance: pmunit_multidimm_0, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_0
  if { [catch {set pmunit_multidimm_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_1, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_1
  if { [catch {set pmunit_multidimm_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_2, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_2
  if { [catch {set pmunit_multidimm_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_2 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_3, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_3
  if { [catch {set pmunit_multidimm_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_3 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_4, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_4
  if { [catch {set pmunit_multidimm_4 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_4 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_5, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_5
  if { [catch {set pmunit_multidimm_5 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_5 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_6, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_6
  if { [catch {set pmunit_multidimm_6 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_6 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmunit_multidimm_7, and set properties
  set block_name pmunit_multidimm
  set block_cell_name pmunit_multidimm_7
  if { [catch {set pmunit_multidimm_7 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmunit_multidimm_7 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: smartconnect_0, and set properties
  set smartconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 smartconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {9} \
 ] $smartconnect_0

  # Create instance: smartconnect_1, and set properties
  set smartconnect_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 smartconnect_1 ]
  set_property -dict [ list \
   CONFIG.NUM_SI {8} \
 ] $smartconnect_1

  # Create instance: split_0, and set properties
  set block_name split
  set block_cell_name split_0
  if { [catch {set split_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_1, and set properties
  set block_name split
  set block_cell_name split_1
  if { [catch {set split_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_2, and set properties
  set block_name split
  set block_cell_name split_2
  if { [catch {set split_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_2 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_3, and set properties
  set block_name split
  set block_cell_name split_3
  if { [catch {set split_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_3 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_4, and set properties
  set block_name split
  set block_cell_name split_4
  if { [catch {set split_4 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_4 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_5, and set properties
  set block_name split
  set block_cell_name split_5
  if { [catch {set split_5 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_5 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_com_arbitter_0, and set properties
  set block_name split_com_arbitter
  set block_cell_name split_com_arbitter_0
  if { [catch {set split_com_arbitter_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_com_arbitter_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net axi_dma_0_M_AXIS_MM2S [get_bd_intf_pins axi_dma_0/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_0/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_MM2S [get_bd_intf_pins axi_dma_0/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_S2MM [get_bd_intf_pins axi_dma_0/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S01_AXI]
  connect_bd_intf_net -intf_net axi_dma_1_M_AXIS_MM2S [get_bd_intf_pins axi_dma_1/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_1/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_1_M_AXI_MM2S [get_bd_intf_pins axi_dma_1/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S02_AXI]
  connect_bd_intf_net -intf_net axi_dma_1_M_AXI_S2MM [get_bd_intf_pins axi_dma_1/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S03_AXI]
  connect_bd_intf_net -intf_net axi_dma_2_M_AXIS_MM2S [get_bd_intf_pins axi_dma_2/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_2/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_2_M_AXI_MM2S [get_bd_intf_pins axi_dma_2/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S04_AXI]
  connect_bd_intf_net -intf_net axi_dma_2_M_AXI_S2MM [get_bd_intf_pins axi_dma_2/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S05_AXI]
  connect_bd_intf_net -intf_net axi_dma_3_M_AXIS_MM2S [get_bd_intf_pins axi_dma_3/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_3/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_3_M_AXI_MM2S [get_bd_intf_pins axi_dma_3/M_AXI_MM2S] [get_bd_intf_pins smartconnect_0/S06_AXI]
  connect_bd_intf_net -intf_net axi_dma_3_M_AXI_S2MM [get_bd_intf_pins axi_dma_3/M_AXI_S2MM] [get_bd_intf_pins smartconnect_0/S07_AXI]
  connect_bd_intf_net -intf_net axi_dma_4_M_AXIS_MM2S [get_bd_intf_pins axi_dma_4/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_4/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_4_M_AXI_MM2S [get_bd_intf_pins axi_dma_4/M_AXI_MM2S] [get_bd_intf_pins smartconnect_1/S00_AXI]
  connect_bd_intf_net -intf_net axi_dma_4_M_AXI_S2MM [get_bd_intf_pins axi_dma_4/M_AXI_S2MM] [get_bd_intf_pins smartconnect_1/S01_AXI]
  connect_bd_intf_net -intf_net axi_dma_5_M_AXIS_MM2S [get_bd_intf_pins axi_dma_5/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_5/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_5_M_AXI_MM2S [get_bd_intf_pins axi_dma_5/M_AXI_MM2S] [get_bd_intf_pins smartconnect_1/S02_AXI]
  connect_bd_intf_net -intf_net axi_dma_5_M_AXI_S2MM [get_bd_intf_pins axi_dma_5/M_AXI_S2MM] [get_bd_intf_pins smartconnect_1/S03_AXI]
  connect_bd_intf_net -intf_net axi_dma_6_M_AXIS_MM2S [get_bd_intf_pins axi_dma_6/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_6/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_6_M_AXI_MM2S [get_bd_intf_pins axi_dma_6/M_AXI_MM2S] [get_bd_intf_pins smartconnect_1/S04_AXI]
  connect_bd_intf_net -intf_net axi_dma_6_M_AXI_S2MM [get_bd_intf_pins axi_dma_6/M_AXI_S2MM] [get_bd_intf_pins smartconnect_1/S05_AXI]
  connect_bd_intf_net -intf_net axi_dma_7_M_AXIS_MM2S [get_bd_intf_pins axi_dma_7/M_AXIS_MM2S] [get_bd_intf_pins axi_dma_7/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_dma_7_M_AXI_MM2S [get_bd_intf_pins axi_dma_7/M_AXI_MM2S] [get_bd_intf_pins smartconnect_1/S06_AXI]
  connect_bd_intf_net -intf_net axi_dma_7_M_AXI_S2MM [get_bd_intf_pins axi_dma_7/M_AXI_S2MM] [get_bd_intf_pins smartconnect_1/S07_AXI]
  connect_bd_intf_net -intf_net axi_engine_0_M_AXI [get_bd_intf_pins axi_engine_0/M_AXI] [get_bd_intf_pins multi_thread_command_0/S_AXI]
  connect_bd_intf_net -intf_net axi_lite_master_pcie_0_M_AXI [get_bd_intf_pins AXI_Lite_slave_plug_0/S00_AXI] [get_bd_intf_pins axi_lite_master_pcie_0/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_0_M_AXI [get_bd_intf_pins axi_dma_0/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_0/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_1_M_AXI [get_bd_intf_pins axi_dma_1/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_1/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_2_M_AXI [get_bd_intf_pins axi_dma_2/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_2/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_3_M_AXI [get_bd_intf_pins axi_dma_3/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_3/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_4_M_AXI [get_bd_intf_pins axi_dma_4/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_4/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_5_M_AXI [get_bd_intf_pins axi_dma_5/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_5/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_6_M_AXI [get_bd_intf_pins axi_dma_6/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_6/M_AXI]
  connect_bd_intf_net -intf_net pmunit_multidimm_7_M_AXI [get_bd_intf_pins axi_dma_7/S_AXI_LITE] [get_bd_intf_pins pmunit_multidimm_7/M_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M00_AXI [get_bd_intf_pins AXI_Lite_slave_plug_1/S00_AXI] [get_bd_intf_pins smartconnect_0/M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M01_AXI [get_bd_intf_pins AXI_Lite_slave_plug_2/S00_AXI] [get_bd_intf_pins smartconnect_0/M01_AXI]
  connect_bd_intf_net -intf_net smartconnect_1_M00_AXI [get_bd_intf_pins smartconnect_0/S08_AXI] [get_bd_intf_pins smartconnect_1/M00_AXI]

  # Create port connections
  connect_bd_net -net addrmonitor_0_m00_axi_awaddr [get_bd_pins AXI_Lite_slave_plug_0/s00_axi_awaddr] [get_bd_pins addrmonitor_0/m00_axi_awaddr]
  connect_bd_net -net addrmonitor_0_m00_axi_awvalid [get_bd_pins AXI_Lite_slave_plug_0/s00_axi_awvalid] [get_bd_pins addrmonitor_0/m00_axi_awvalid]
  connect_bd_net -net addrmonitor_0_m00_axi_wdata [get_bd_pins AXI_Lite_slave_plug_0/s00_axi_wdata] [get_bd_pins addrmonitor_0/m00_axi_wdata]
  connect_bd_net -net addrmonitor_0_m00_axi_wvalid [get_bd_pins AXI_Lite_slave_plug_0/s00_axi_wvalid] [get_bd_pins addrmonitor_0/m00_axi_wvalid]
  connect_bd_net -net addrmonitor_0_pmem_obj_offset [get_bd_pins addrmonitor_0/pmem_obj_offset] [get_bd_pins multi_thread_command_0/pmem_obj_offset]
  connect_bd_net -net addrmonitor_0_pmem_obj_offset_valid [get_bd_pins addrmonitor_0/pmem_obj_offset_valid] [get_bd_pins multi_thread_command_0/pmem_obj_offset_valid]
  connect_bd_net -net axi_lite_master_pcie_0_M_AXI_AWADDR [get_bd_pins addrmonitor_0/s00_axi_awaddr] [get_bd_pins axi_lite_master_pcie_0/M_AXI_AWADDR] [get_bd_pins dimm_scheduler_0/awaddr] [get_bd_pins dimm_scheduler_1/awaddr]
  connect_bd_net -net axi_lite_master_pcie_0_M_AXI_AWVALID [get_bd_pins addrmonitor_0/s00_axi_awvalid] [get_bd_pins axi_lite_master_pcie_0/M_AXI_AWVALID] [get_bd_pins dimm_scheduler_0/awvalid] [get_bd_pins dimm_scheduler_1/awvalid]
  connect_bd_net -net axi_lite_master_pcie_0_M_AXI_WDATA [get_bd_pins addrmonitor_0/s00_axi_wdata] [get_bd_pins axi_lite_master_pcie_0/M_AXI_WDATA]
  connect_bd_net -net axi_lite_master_pcie_0_M_AXI_WVALID [get_bd_pins addrmonitor_0/s00_axi_wvalid] [get_bd_pins axi_lite_master_pcie_0/M_AXI_WVALID]
  connect_bd_net -net clk_1 [get_bd_ports clk] [get_bd_pins AXI_Lite_slave_plug_0/s00_axi_aclk] [get_bd_pins AXI_Lite_slave_plug_1/s00_axi_aclk] [get_bd_pins AXI_Lite_slave_plug_2/s00_axi_aclk] [get_bd_pins addrmonitor_0/clk] [get_bd_pins addrmonitor_0/clkmemops] [get_bd_pins axi_dma_0/m_axi_mm2s_aclk] [get_bd_pins axi_dma_0/m_axi_s2mm_aclk] [get_bd_pins axi_dma_0/s_axi_lite_aclk] [get_bd_pins axi_dma_1/m_axi_mm2s_aclk] [get_bd_pins axi_dma_1/m_axi_s2mm_aclk] [get_bd_pins axi_dma_1/s_axi_lite_aclk] [get_bd_pins axi_dma_2/m_axi_mm2s_aclk] [get_bd_pins axi_dma_2/m_axi_s2mm_aclk] [get_bd_pins axi_dma_2/s_axi_lite_aclk] [get_bd_pins axi_dma_3/m_axi_mm2s_aclk] [get_bd_pins axi_dma_3/m_axi_s2mm_aclk] [get_bd_pins axi_dma_3/s_axi_lite_aclk] [get_bd_pins axi_dma_4/m_axi_mm2s_aclk] [get_bd_pins axi_dma_4/m_axi_s2mm_aclk] [get_bd_pins axi_dma_4/s_axi_lite_aclk] [get_bd_pins axi_dma_5/m_axi_mm2s_aclk] [get_bd_pins axi_dma_5/m_axi_s2mm_aclk] [get_bd_pins axi_dma_5/s_axi_lite_aclk] [get_bd_pins axi_dma_6/m_axi_mm2s_aclk] [get_bd_pins axi_dma_6/m_axi_s2mm_aclk] [get_bd_pins axi_dma_6/s_axi_lite_aclk] [get_bd_pins axi_dma_7/m_axi_mm2s_aclk] [get_bd_pins axi_dma_7/m_axi_s2mm_aclk] [get_bd_pins axi_dma_7/s_axi_lite_aclk] [get_bd_pins axi_engine_0/M_AXI_ACLK] [get_bd_pins axi_lite_master_pcie_0/M_AXI_ACLK] [get_bd_pins dimm_scheduler_0/clk] [get_bd_pins dimm_scheduler_1/clk] [get_bd_pins multi_thread_command_0/S_AXI_ACLK] [get_bd_pins pmunit_multidimm_0/clk] [get_bd_pins pmunit_multidimm_1/clk] [get_bd_pins pmunit_multidimm_2/clk] [get_bd_pins pmunit_multidimm_3/clk] [get_bd_pins pmunit_multidimm_4/clk] [get_bd_pins pmunit_multidimm_5/clk] [get_bd_pins pmunit_multidimm_6/clk] [get_bd_pins pmunit_multidimm_7/clk] [get_bd_pins smartconnect_0/aclk] [get_bd_pins smartconnect_1/aclk] [get_bd_pins split_com_arbitter_0/clk]
  connect_bd_net -net combile_0_outp [get_bd_pins combile_0/outp] [get_bd_pins dimm_scheduler_0/nearpmunit_done]
  connect_bd_net -net combile_1_outp [get_bd_pins combile_1/outp] [get_bd_pins dimm_scheduler_1/nearpmunit_done]
  connect_bd_net -net dimm_scheduler_0_command_broadcast [get_bd_pins dimm_scheduler_0/command_broadcast] [get_bd_pins pmunit_multidimm_0/COMMAND_BUS] [get_bd_pins pmunit_multidimm_1/COMMAND_BUS] [get_bd_pins pmunit_multidimm_2/COMMAND_BUS] [get_bd_pins pmunit_multidimm_3/COMMAND_BUS]
  connect_bd_net -net dimm_scheduler_0_command_broadcast_valid [get_bd_pins dimm_scheduler_0/command_broadcast_valid] [get_bd_pins split_0/inp]
  connect_bd_net -net dimm_scheduler_0_complete_split_cmd_idx_out [get_bd_pins dimm_scheduler_0/complete_split_cmd_idx_in] [get_bd_pins dimm_scheduler_1/complete_split_cmd_idx_in] [get_bd_pins split_com_arbitter_0/complete_split_cmd]
  connect_bd_net -net dimm_scheduler_0_complete_split_out [get_bd_pins dimm_scheduler_0/complete_split_out] [get_bd_pins split_com_arbitter_0/complete_split_in0]
  connect_bd_net -net dimm_scheduler_0_current_log_addr [get_bd_pins dimm_scheduler_0/current_log_addr] [get_bd_pins pmunit_multidimm_0/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_1/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_2/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_3/CURRENT_LOG_ADDR]
  connect_bd_net -net dimm_scheduler_0_nearpm_go_ahead [get_bd_pins dimm_scheduler_0/nearpm_go_ahead] [get_bd_pins split_1/inp]
  connect_bd_net -net dimm_scheduler_0_pending_complete_split_out [get_bd_pins dimm_scheduler_0/pending_complete_split_out] [get_bd_pins split_com_arbitter_0/pending_complete_split_in0]
  connect_bd_net -net dimm_scheduler_1_command_broadcast [get_bd_pins dimm_scheduler_1/command_broadcast] [get_bd_pins pmunit_multidimm_4/COMMAND_BUS] [get_bd_pins pmunit_multidimm_5/COMMAND_BUS] [get_bd_pins pmunit_multidimm_6/COMMAND_BUS] [get_bd_pins pmunit_multidimm_7/COMMAND_BUS]
  connect_bd_net -net dimm_scheduler_1_command_broadcast_valid [get_bd_pins dimm_scheduler_1/command_broadcast_valid] [get_bd_pins split_2/inp]
  connect_bd_net -net dimm_scheduler_1_complete_split_cmd_idx_out [get_bd_pins dimm_scheduler_0/complete_split_cmd_idx_valid_in] [get_bd_pins split_5/out0]
  connect_bd_net -net dimm_scheduler_1_complete_split_out [get_bd_pins dimm_scheduler_1/complete_split_out] [get_bd_pins split_com_arbitter_0/complete_split_in1]
  connect_bd_net -net dimm_scheduler_1_current_log_addr [get_bd_pins dimm_scheduler_1/current_log_addr] [get_bd_pins pmunit_multidimm_4/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_5/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_6/CURRENT_LOG_ADDR] [get_bd_pins pmunit_multidimm_7/CURRENT_LOG_ADDR]
  connect_bd_net -net dimm_scheduler_1_nearpm_go_ahead [get_bd_pins dimm_scheduler_1/nearpm_go_ahead] [get_bd_pins split_3/inp]
  connect_bd_net -net dimm_scheduler_1_pending_complete_split_out [get_bd_pins dimm_scheduler_1/pending_complete_split_out] [get_bd_pins split_com_arbitter_0/pending_complete_split_in1]
  connect_bd_net -net multi_thread_command_0_command_broadcast [get_bd_pins dimm_scheduler_0/command_in] [get_bd_pins dimm_scheduler_1/command_in] [get_bd_pins multi_thread_command_0/command_broadcast]
  connect_bd_net -net multi_thread_command_0_command_broadcast_valid [get_bd_pins multi_thread_command_0/command_broadcast_valid] [get_bd_pins split_4/inp]
  connect_bd_net -net multi_thread_command_0_oid_offset_lookup [get_bd_pins addrmonitor_0/OID_OFFSET_LOOKUP] [get_bd_pins multi_thread_command_0/oid_offset_lookup]
  connect_bd_net -net multi_thread_command_0_oid_valid [get_bd_pins addrmonitor_0/OID_VALID] [get_bd_pins multi_thread_command_0/oid_valid]
  connect_bd_net -net pmunit_multidimm_0_PMUNIT_STATE [get_bd_pins combile_0/in0] [get_bd_pins pmunit_multidimm_0/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_1_PMUNIT_STATE [get_bd_pins combile_0/in1] [get_bd_pins pmunit_multidimm_1/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_2_PMUNIT_STATE [get_bd_pins combile_0/in2] [get_bd_pins pmunit_multidimm_2/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_3_PMUNIT_STATE [get_bd_pins combile_0/in3] [get_bd_pins pmunit_multidimm_3/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_4_PMUNIT_STATE [get_bd_pins combile_1/in0] [get_bd_pins pmunit_multidimm_4/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_5_PMUNIT_STATE [get_bd_pins combile_1/in1] [get_bd_pins pmunit_multidimm_5/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_6_PMUNIT_STATE [get_bd_pins combile_1/in2] [get_bd_pins pmunit_multidimm_6/PMUNIT_STATE]
  connect_bd_net -net pmunit_multidimm_7_PMUNIT_STATE [get_bd_pins combile_1/in3] [get_bd_pins pmunit_multidimm_7/PMUNIT_STATE]
  connect_bd_net -net reset_1 [get_bd_ports reset] [get_bd_pins AXI_Lite_slave_plug_0/s00_axi_aresetn] [get_bd_pins AXI_Lite_slave_plug_1/s00_axi_aresetn] [get_bd_pins AXI_Lite_slave_plug_2/s00_axi_aresetn] [get_bd_pins addrmonitor_0/aresetn] [get_bd_pins axi_dma_0/axi_resetn] [get_bd_pins axi_dma_1/axi_resetn] [get_bd_pins axi_dma_2/axi_resetn] [get_bd_pins axi_dma_3/axi_resetn] [get_bd_pins axi_dma_4/axi_resetn] [get_bd_pins axi_dma_5/axi_resetn] [get_bd_pins axi_dma_6/axi_resetn] [get_bd_pins axi_dma_7/axi_resetn] [get_bd_pins axi_engine_0/M_AXI_ARESETN] [get_bd_pins axi_lite_master_pcie_0/M_AXI_ARESETN] [get_bd_pins dimm_scheduler_0/aresetn] [get_bd_pins dimm_scheduler_1/aresetn] [get_bd_pins multi_thread_command_0/S_AXI_ARESETN] [get_bd_pins pmunit_multidimm_0/reset] [get_bd_pins pmunit_multidimm_1/reset] [get_bd_pins pmunit_multidimm_2/reset] [get_bd_pins pmunit_multidimm_3/reset] [get_bd_pins pmunit_multidimm_4/reset] [get_bd_pins pmunit_multidimm_5/reset] [get_bd_pins pmunit_multidimm_6/reset] [get_bd_pins pmunit_multidimm_7/reset] [get_bd_pins smartconnect_0/aresetn] [get_bd_pins smartconnect_1/aresetn] [get_bd_pins split_com_arbitter_0/aresetn]
  connect_bd_net -net split_0_out0 [get_bd_pins pmunit_multidimm_0/COMMAND_VALID] [get_bd_pins split_0/out0]
  connect_bd_net -net split_0_out1 [get_bd_pins pmunit_multidimm_1/COMMAND_VALID] [get_bd_pins split_0/out1]
  connect_bd_net -net split_0_out2 [get_bd_pins pmunit_multidimm_2/COMMAND_VALID] [get_bd_pins split_0/out2]
  connect_bd_net -net split_0_out3 [get_bd_pins pmunit_multidimm_3/COMMAND_VALID] [get_bd_pins split_0/out3]
  connect_bd_net -net split_1_out0 [get_bd_pins pmunit_multidimm_0/START_EXECUTION] [get_bd_pins split_1/out0]
  connect_bd_net -net split_1_out1 [get_bd_pins pmunit_multidimm_1/START_EXECUTION] [get_bd_pins split_1/out1]
  connect_bd_net -net split_1_out2 [get_bd_pins pmunit_multidimm_2/START_EXECUTION] [get_bd_pins split_1/out2]
  connect_bd_net -net split_1_out3 [get_bd_pins pmunit_multidimm_3/START_EXECUTION] [get_bd_pins split_1/out3]
  connect_bd_net -net split_2_out0 [get_bd_pins pmunit_multidimm_4/COMMAND_VALID] [get_bd_pins split_2/out0]
  connect_bd_net -net split_2_out1 [get_bd_pins pmunit_multidimm_5/COMMAND_VALID] [get_bd_pins split_2/out1]
  connect_bd_net -net split_2_out2 [get_bd_pins pmunit_multidimm_6/COMMAND_VALID] [get_bd_pins split_2/out2]
  connect_bd_net -net split_2_out3 [get_bd_pins pmunit_multidimm_7/COMMAND_VALID] [get_bd_pins split_2/out3]
  connect_bd_net -net split_3_out0 [get_bd_pins pmunit_multidimm_4/START_EXECUTION] [get_bd_pins split_3/out0]
  connect_bd_net -net split_3_out1 [get_bd_pins pmunit_multidimm_5/START_EXECUTION] [get_bd_pins split_3/out1]
  connect_bd_net -net split_3_out2 [get_bd_pins pmunit_multidimm_6/START_EXECUTION] [get_bd_pins split_3/out2]
  connect_bd_net -net split_3_out3 [get_bd_pins pmunit_multidimm_7/START_EXECUTION] [get_bd_pins split_3/out3]
  connect_bd_net -net split_4_out0 [get_bd_pins dimm_scheduler_0/command_valid] [get_bd_pins split_4/out0]
  connect_bd_net -net split_4_out1 [get_bd_pins dimm_scheduler_1/command_valid] [get_bd_pins split_4/out1]
  connect_bd_net -net split_5_out1 [get_bd_pins dimm_scheduler_1/complete_split_cmd_idx_valid_in] [get_bd_pins split_5/out1]
  connect_bd_net -net split_com_arbitter_0_complete_split_cmd_valid [get_bd_pins split_5/inp] [get_bd_pins split_com_arbitter_0/complete_split_cmd_valid]
  connect_bd_net -net split_com_arbitter_0_read_complete_split0 [get_bd_pins dimm_scheduler_0/read_complete_split] [get_bd_pins split_com_arbitter_0/read_complete_split0]
  connect_bd_net -net split_com_arbitter_0_read_complete_split1 [get_bd_pins dimm_scheduler_1/read_complete_split] [get_bd_pins split_com_arbitter_0/read_complete_split1]
  connect_bd_net -net start_1 [get_bd_ports start] [get_bd_pins axi_engine_0/DMA_START] [get_bd_pins axi_lite_master_pcie_0/DMA_START]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins axi_engine_0/DMA_SRC] [get_bd_pins xlconstant_0/dout]

  # Create address segments
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_0/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_0/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_1/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_1/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_1/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_1/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_2/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_2/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_2/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_2/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_3/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_3/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_3/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_3/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_4/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_4/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_4/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_4/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_5/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_5/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_5/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_5/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_6/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_6/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_6/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_6/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_7/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0x40000000 [get_bd_addr_spaces axi_dma_7/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_1/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_1_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_7/Data_MM2S] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x40000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_7/Data_S2MM] [get_bd_addr_segs AXI_Lite_slave_plug_2/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_2_S00_AXI_reg
  create_bd_addr_seg -range 0x00010000 -offset 0x44A00000 [get_bd_addr_spaces axi_engine_0/M_AXI] [get_bd_addr_segs multi_thread_command_0/S_AXI/reg0] SEG_multi_thread_command_0_reg0
  create_bd_addr_seg -range 0x00010000 -offset 0x44A00000 [get_bd_addr_spaces axi_lite_master_pcie_0/M_AXI] [get_bd_addr_segs AXI_Lite_slave_plug_0/S00_AXI/S00_AXI_reg] SEG_AXI_Lite_slave_plug_0_S00_AXI_reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_0/M_AXI] [get_bd_addr_segs axi_dma_0/S_AXI_LITE/Reg] SEG_axi_dma_0_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_1/M_AXI] [get_bd_addr_segs axi_dma_1/S_AXI_LITE/Reg] SEG_axi_dma_1_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_2/M_AXI] [get_bd_addr_segs axi_dma_2/S_AXI_LITE/Reg] SEG_axi_dma_2_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_3/M_AXI] [get_bd_addr_segs axi_dma_3/S_AXI_LITE/Reg] SEG_axi_dma_3_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_4/M_AXI] [get_bd_addr_segs axi_dma_4/S_AXI_LITE/Reg] SEG_axi_dma_4_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_5/M_AXI] [get_bd_addr_segs axi_dma_5/S_AXI_LITE/Reg] SEG_axi_dma_5_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_6/M_AXI] [get_bd_addr_segs axi_dma_6/S_AXI_LITE/Reg] SEG_axi_dma_6_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41E00000 [get_bd_addr_spaces pmunit_multidimm_7/M_AXI] [get_bd_addr_segs axi_dma_7/S_AXI_LITE/Reg] SEG_axi_dma_7_Reg


  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_msg_id "BD_TCL-1000" "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_design_4()
cr_bd_design_4 ""
set_property EXCLUDE_DEBUG_LOGIC "0" [get_files design_4.bd ] 
set_property GENERATE_SYNTH_CHECKPOINT "1" [get_files design_4.bd ] 
set_property IS_ENABLED "1" [get_files design_4.bd ] 
set_property IS_GLOBAL_INCLUDE "0" [get_files design_4.bd ] 
set_property IS_LOCKED "0" [get_files design_4.bd ] 
set_property IS_MANAGED "0" [get_files design_4.bd ] 
set_property LIBRARY "xil_defaultlib" [get_files design_4.bd ] 
set_property PATH_MODE "RelativeFirst" [get_files design_4.bd ] 
set_property PFM_NAME "" [get_files design_4.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files design_4.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_4.bd ] 
set_property USED_IN "synthesis implementation simulation" [get_files design_4.bd ] 
set_property USED_IN_IMPLEMENTATION "1" [get_files design_4.bd ] 
set_property USED_IN_SIMULATION "1" [get_files design_4.bd ] 
set_property USED_IN_SYNTHESIS "1" [get_files design_4.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcvu9p-flga2104-2L-e -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.pblocks" -value "" -objects $obj
set_property -name "options.cells" -value "" -objects $obj
set_property -name "options.slr" -value "0" -objects $obj
set_property -name "options.packthru" -value "0" -objects $obj
set_property -name "options.hierarchical" -value "0" -objects $obj
set_property -name "options.hierarchical_depth" -value "" -objects $obj
set_property -name "options.hierarchical_percentages" -value "0" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
set obj [get_runs synth_1]
set_property -name "constrset" -value "constrs_1" -objects $obj
set_property -name "description" -value "Vivado Synthesis Defaults" -objects $obj
set_property -name "flow" -value "Vivado Synthesis 2018" -objects $obj
set_property -name "name" -value "synth_1" -objects $obj
set_property -name "needs_refresh" -value "0" -objects $obj
set_property -name "srcset" -value "sources_1" -objects $obj
set_property -name "incremental_checkpoint" -value "" -objects $obj
set_property -name "incremental_checkpoint.more_options" -value "" -objects $obj
set_property -name "include_in_archive" -value "1" -objects $obj
set_property -name "gen_full_bitstream" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj
set_property -name "steps.synth_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.synth_design.tcl.post" -value "" -objects $obj
set_property -name "steps.synth_design.args.flatten_hierarchy" -value "rebuilt" -objects $obj
set_property -name "steps.synth_design.args.gated_clock_conversion" -value "off" -objects $obj
set_property -name "steps.synth_design.args.bufg" -value "12" -objects $obj
set_property -name "steps.synth_design.args.fanout_limit" -value "10000" -objects $obj
set_property -name "steps.synth_design.args.directive" -value "Default" -objects $obj
set_property -name "steps.synth_design.args.retiming" -value "0" -objects $obj
set_property -name "steps.synth_design.args.fsm_extraction" -value "auto" -objects $obj
set_property -name "steps.synth_design.args.keep_equivalent_registers" -value "0" -objects $obj
set_property -name "steps.synth_design.args.resource_sharing" -value "auto" -objects $obj
set_property -name "steps.synth_design.args.control_set_opt_threshold" -value "auto" -objects $obj
set_property -name "steps.synth_design.args.no_lc" -value "0" -objects $obj
set_property -name "steps.synth_design.args.no_srlextract" -value "0" -objects $obj
set_property -name "steps.synth_design.args.shreg_min_size" -value "3" -objects $obj
set_property -name "steps.synth_design.args.max_bram" -value "-1" -objects $obj
set_property -name "steps.synth_design.args.max_uram" -value "-1" -objects $obj
set_property -name "steps.synth_design.args.max_dsp" -value "-1" -objects $obj
set_property -name "steps.synth_design.args.max_bram_cascade_height" -value "-1" -objects $obj
set_property -name "steps.synth_design.args.max_uram_cascade_height" -value "-1" -objects $obj
set_property -name "steps.synth_design.args.cascade_dsp" -value "auto" -objects $obj
set_property -name "steps.synth_design.args.assert" -value "0" -objects $obj
set_property -name "steps.synth_design.args.more options" -value "" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcvu9p-flga2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "0" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.upgrade_cw" -value "0" -objects $obj
set_property -name "options.checks" -value "" -objects $obj
set_property -name "options.ruledecks" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "0" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "0" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.pblocks" -value "" -objects $obj
set_property -name "options.cells" -value "" -objects $obj
set_property -name "options.slr" -value "0" -objects $obj
set_property -name "options.packthru" -value "0" -objects $obj
set_property -name "options.hierarchical" -value "0" -objects $obj
set_property -name "options.hierarchical_depth" -value "" -objects $obj
set_property -name "options.hierarchical_percentages" -value "0" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.verbose" -value "1" -objects $obj
set_property -name "options.cells" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.cells" -value "" -objects $obj
set_property -name "options.hierarchical" -value "0" -objects $obj
set_property -name "options.hierarchical_depth" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.cells" -value "" -objects $obj
set_property -name "options.hierarchical" -value "0" -objects $obj
set_property -name "options.hierarchical_depth" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "0" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "0" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "0" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.upgrade_cw" -value "0" -objects $obj
set_property -name "options.checks" -value "" -objects $obj
set_property -name "options.ruledecks" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.checks" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.advisory" -value "0" -objects $obj
set_property -name "options.xpe" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.of_objects" -value "" -objects $obj
set_property -name "options.route_type" -value "" -objects $obj
set_property -name "options.list_all_nets" -value "0" -objects $obj
set_property -name "options.show_all" -value "0" -objects $obj
set_property -name "options.has_routing" -value "0" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "0" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.cells" -value "" -objects $obj
set_property -name "options.hierarchical" -value "0" -objects $obj
set_property -name "options.hierarchical_depth" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.write_xdc" -value "0" -objects $obj
set_property -name "options.clock_roots_only" -value "0" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.slack_greater_than" -value "" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.slack_greater_than" -value "" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "constrset" -value "constrs_1" -objects $obj
set_property -name "description" -value "Default settings for Implementation." -objects $obj
set_property -name "flow" -value "Vivado Implementation 2018" -objects $obj
set_property -name "name" -value "impl_1" -objects $obj
set_property -name "needs_refresh" -value "0" -objects $obj
set_property -name "pr_configuration" -value "" -objects $obj
set_property -name "srcset" -value "sources_1" -objects $obj
set_property -name "incremental_checkpoint" -value "" -objects $obj
set_property -name "incremental_checkpoint.more_options" -value "" -objects $obj
set_property -name "include_in_archive" -value "1" -objects $obj
set_property -name "gen_full_bitstream" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.init_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.init_design.tcl.post" -value "" -objects $obj
set_property -name "steps.opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.opt_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.opt_design.tcl.post" -value "" -objects $obj
set_property -name "steps.opt_design.args.verbose" -value "0" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Default" -objects $obj
set_property -name "steps.opt_design.args.more options" -value "" -objects $obj
set_property -name "steps.power_opt_design.is_enabled" -value "0" -objects $obj
set_property -name "steps.power_opt_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.power_opt_design.tcl.post" -value "" -objects $obj
set_property -name "steps.power_opt_design.args.more options" -value "" -objects $obj
set_property -name "steps.place_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.place_design.tcl.post" -value "" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.more options" -value "" -objects $obj
set_property -name "steps.post_place_power_opt_design.is_enabled" -value "0" -objects $obj
set_property -name "steps.post_place_power_opt_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.post_place_power_opt_design.tcl.post" -value "" -objects $obj
set_property -name "steps.post_place_power_opt_design.args.more options" -value "" -objects $obj
set_property -name "steps.phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.phys_opt_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.phys_opt_design.tcl.post" -value "" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.phys_opt_design.args.more options" -value "" -objects $obj
set_property -name "steps.route_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.route_design.tcl.post" -value "" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.post_route_phys_opt_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.post_route_phys_opt_design.tcl.post" -value "" -objects $obj
set_property -name "steps.post_route_phys_opt_design.args.directive" -value "Default" -objects $obj
set_property -name "steps.post_route_phys_opt_design.args.more options" -value "" -objects $obj
set_property -name "steps.write_bitstream.tcl.pre" -value "" -objects $obj
set_property -name "steps.write_bitstream.tcl.post" -value "" -objects $obj
set_property -name "steps.write_bitstream.args.raw_bitfile" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.mask_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.no_binary_bitfile" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.bin_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.logic_location_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.more options" -value "" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
